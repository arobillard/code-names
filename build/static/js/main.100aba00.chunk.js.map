{"version":3,"sources":["components/NotFound.js","components/ui-elements/Card.js","components/ui-elements/ControlBar.js","components/ui-elements/GameBoard.js","helpers.js","base.js","components/App.js","components/pages/Welcome.js","components/ui-elements/Header.js","components/ui-elements/Footer.js","components/Router.js","index.js"],"names":["NotFound","to","React","Component","Card","keyHandle","e","console","log","keyCode","props","cardReveal","data","this","role","tabIndex","revealed","onKeyDown","onClick","index","className","team","spymaster","word","ControlBar","gamecode","onChange","spymasterSwitch","type","checked","generateCards","GameBoard","state","Object","keys","cards","map","key","rando","arr","Math","floor","random","length","slugify","text","toString","toLowerCase","replace","wordlist","words","newList","newListCount","newWord","indexOf","push","getTwentyFiveWords","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","wordList","newWordListObject","forEach","wordObject","randoNums","numberGenerator","newNumber","i","splice","setState","target","currentTarget","getAttribute","localStorageRef","localStorage","getItem","match","params","savedState","JSON","parse","ref","syncState","context","setItem","stringify","Welcome","gcInput","createRef","goToGame","preventDefault","current","value","history","onSubmit","required","placeholder","defaultValue","Header","Footer","href","rel","Router","id","exact","path","component","render","document","querySelector"],"mappings":"kOAgBeA,E,uKAVX,OACE,oCACE,yCACA,kBAAC,IAAD,CAAMC,GAAG,KAAT,gB,GANeC,IAAMC,W,QCoBdC,E,4MApBbC,UAAY,SAACC,GACXC,QAAQC,IAAIF,EAAEG,SACG,KAAdH,EAAEG,SACH,EAAKC,MAAMC,WAAWL,GAEP,KAAdA,EAAEG,SACH,EAAKC,MAAMC,WAAWL,I,uDAIxB,IAAMM,EAAOC,KAAKH,MAAME,KACxB,OACE,yBAAKE,KAAK,SAASC,SAAUH,EAAKI,SAAW,KAAO,IAAKC,UAAWJ,KAAKR,UAAWa,QAASL,KAAKH,MAAMC,WAAYQ,MAAON,KAAKH,MAAMS,MAAOC,UAAS,cAASR,EAAKI,SAAL,oBAA6BJ,EAAKS,MAAS,IAApD,OAAyDR,KAAKH,MAAMY,UAAX,WAA2BV,EAAKS,MAAS,KACtP,uBAAGD,UAAU,aAAaR,EAAKW,W,GAdpBrB,IAAMC,WCqBVqB,E,uKAlBX,OACE,yBAAKJ,UAAU,sBACb,wBAAIA,UAAU,cAAd,eACA,2BAAG,0BAAMA,UAAU,QAAhB,aAAH,IAA2C,wBAAIA,UAAU,YAAYP,KAAKH,MAAMe,WAChF,yBAAKL,UAAU,eACb,+BACE,8CACA,2BAAOM,SAAUb,KAAKH,MAAMiB,gBAAiBC,KAAK,WAAWC,UAAShB,KAAKH,MAAMY,YACjF,0BAAMF,UAAU,YAGpB,4BAAQA,UAAU,MAAMF,QAASL,KAAKH,MAAMoB,eAA5C,iB,GAdiB5B,IAAMC,WCiChB4B,E,uKA7BH,IAAD,OACDC,EAAQnB,KAAKH,MAAMsB,MACzB,OACE,yBAAKZ,UAAU,qDACb,6BAASA,UAAS,eAAUY,EAAMV,UAAY,aAAe,KAC1DW,OAAOC,KAAKF,EAAMG,OAAOC,KAAI,SAAAC,GAAG,OAC/B,kBAAC,EAAD,CACEA,IAAKA,EACLlB,MAAOkB,EACPzB,KAAMoB,EAAMG,MAAME,GAClB1B,WAAY,EAAKD,MAAMC,WACvBW,UAAWU,EAAMV,gBAIvB,2BAAOF,UAAU,QACf,kBAAC,EAAD,CACEK,SAAUZ,KAAKH,MAAMe,SACrBE,gBAAiBd,KAAKH,MAAMiB,gBAC5BG,cAAejB,KAAKH,MAAMoB,cAC1BR,UAAWU,EAAMV,kB,GAtBLpB,IAAMC,WCGvB,SAASmC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAGrC,SAASC,EAAQC,GACtB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IA+EpB,IAAMC,EAAW,CACf,YACA,OACA,OACA,WACA,SACA,QACA,OACA,QACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,YACA,YACA,SACA,QACA,QACA,aACA,OACA,QACA,MACA,UACA,UACA,QACA,QACA,UACA,QACA,OACA,UACA,QACA,OACA,UACA,SACA,QACA,SACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,WACA,OACA,OACA,SACA,QACA,WACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,YACA,WACA,UACA,OACA,MACA,SACA,YACA,QACA,SACA,UACA,OACA,QACA,OACA,QACA,OACA,MACA,YACA,OACA,QACA,QACA,UACA,QACA,QACA,OACA,OACA,OACA,MACA,UACA,SACA,QACA,OACA,QACA,QACA,YACA,QACA,QACA,UACA,MACA,OACA,SACA,SACA,OACA,MACA,OACA,MACA,WACA,UACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,UACA,aACA,MACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,SACA,WACA,QACA,YACA,SACA,cACA,OACA,MACA,UACA,QACA,OACA,SACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UACA,MACA,SACA,WACA,QACA,SACA,aACA,QACA,cACA,SACA,UACA,QACA,MACA,OACA,QACA,YACA,UACA,MACA,QACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,SACA,SACA,SACA,WACA,aACA,OACA,SACA,OACA,QACA,OACA,MACA,QACA,YACA,QACA,YACA,SACA,OACA,QACA,OACA,MACA,OACA,QACA,MACA,YACA,OACA,OACA,WACA,SACA,OACA,SACA,UACA,aACA,YACA,MACA,WACA,OACA,OACA,aACA,OACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,QACA,MACA,MACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,SACA,OACA,MACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,OACA,WACA,QACA,QACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,MACA,MACA,QACA,SACA,OACA,UACA,OACA,SACA,MACA,aACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,OACA,UACA,UACA,QACA,OACA,MACA,OACA,QACA,YACA,OACA,MACA,MACA,QACA,QACA,YACA,QACA,OACA,UACA,OACA,MACA,OACA,OACA,UACA,WACA,OACA,UACA,OACA,UACA,QACA,QACA,MACA,QACA,MACA,QACA,UACA,OACA,OACA,OACA,QACA,QACA,OACA,YACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,MACA,SACA,OACA,QACA,QACA,OACA,SACA,UACA,QACA,SACA,OACA,UACA,QACA,QACA,MACA,SACA,OACA,QACA,MACA,QACA,QACA,SACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,OACA,QACA,QACA,QACA,cACA,MACA,SACA,MACA,MACA,SACA,OACA,SACA,MACA,YAGK,SAASC,IAed,OAd2B,WAEzB,IADA,IAAIC,EAAU,GACLC,EAAeD,EAAQR,OAAQS,EAAe,IAAK,CAC1D,IAAIC,EAAUf,EAAMW,IACc,IAA9BE,EAAQG,QAAQD,KAGlBF,EAAQI,KAAKF,GAEfD,EAAeD,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","file":"static/js/main.100aba00.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends React.Component {\n\n  render() {\n    return (\n      <>\n        <h1>Not Found</h1>\n        <Link to=\"/\">Go Home</Link>\n      </>\n    )\n  }\n\n}\n\nexport default NotFound;","import React from 'react';\n\nclass Card extends React.Component {\n  keyHandle = (e) => {\n    console.log(e.keyCode)\n    if(e.keyCode === 13) {\n      this.props.cardReveal(e)\n    }\n    if(e.keyCode === 32) {\n      this.props.cardReveal(e)\n    }\n  }\n  render() {\n    const data = this.props.data;\n    return (\n      <div role=\"button\" tabIndex={data.revealed ? '-1' : '0'} onKeyDown={this.keyHandle} onClick={this.props.cardReveal} index={this.props.index} className={`card${data.revealed ? ` revealed ${data.team}` : \"\"}${this.props.spymaster ? ` ${data.team}` : \"\" }`}>\n        <p className='card-word'>{data.word}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default Card;","import React from 'react';\n\nclass ControlBar extends React.Component {\n\n  render() {\n    return (\n      <div className=\"control-bar island\">\n        <h2 className=\"headline-6\">Control Bar</h2>\n        <p><span className=\"bold\">Gamecode:</span> <em className=\"gamecode\">{this.props.gamecode}</em></p>\n        <div className=\"switch push\">\n          <label>\n            <strong>Spymaster:</strong>\n            <input onChange={this.props.spymasterSwitch} type=\"checkbox\" checked={this.props.spymaster ? true : false} />\n            <span className=\"lever\"></span>\n          </label>\n        </div>\n        <button className=\"btn\" onClick={this.props.generateCards}>New Game</button>\n      </div>\n    )\n  }\n\n}\n\nexport default ControlBar;","import React from 'react';\nimport Card from './Card';\nimport ControlBar from './ControlBar';\n\nclass GameBoard extends React.Component {\n\n  render() {\n    const state = this.props.state;\n    return (\n      <div className=\"gameboard wrapper gutter spread-top spread-bottom\">\n        <section className={`cards${state.spymaster ? ' spymaster' : ''}`}>\n          {Object.keys(state.cards).map(key => (\n            <Card\n              key={key}\n              index={key}\n              data={state.cards[key]}\n              cardReveal={this.props.cardReveal}\n              spymaster={state.spymaster}\n            />\n          ))}\n        </section>\n        <aside className=\"info\">\n          <ControlBar\n            gamecode={this.props.gamecode}\n            spymasterSwitch={this.props.spymasterSwitch}\n            generateCards={this.props.generateCards}\n            spymaster={state.spymaster}\n          />\n        </aside>\n      </div>\n    )\n  }\n\n}\n\nexport default GameBoard;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n\nconst wordlist = [\n  \"Hollywood\",\n  \"Well\",\n  \"Foot\",\n  \"New York\",\n  \"Spring\",\n  \"Court\",\n  \"Tube\",\n  \"Point\",\n  \"Tablet\",\n  \"Slip\",\n  \"Date\",\n  \"Drill\",\n  \"Lemon\",\n  \"Bell\",\n  \"Screen\",\n  \"Fair\",\n  \"Torch\",\n  \"State\",\n  \"Match\",\n  \"Iron\",\n  \"Block\",\n  \"France\",\n  \"Australia\",\n  \"Limousine\",\n  \"Stream\",\n  \"Glove\",\n  \"Nurse\",\n  \"Leprechaun\",\n  \"Play\",\n  \"Tooth\",\n  \"Arm\",\n  \"Bermuda\",\n  \"Diamond\",\n  \"Whale\",\n  \"Comic\",\n  \"Mammoth\",\n  \"Green\",\n  \"Pass\",\n  \"Missile\",\n  \"Paste\",\n  \"Drop\",\n  \"Pheonix\",\n  \"Marble\",\n  \"Staff\",\n  \"Figure\",\n  \"Park\",\n  \"Centaur\",\n  \"Shadow\",\n  \"Fish\",\n  \"Cotton\",\n  \"Egypt\",\n  \"Theater\",\n  \"Scale\",\n  \"Fall\",\n  \"Track\",\n  \"Force\",\n  \"Dinosaur\",\n  \"Bill\",\n  \"Mine\",\n  \"Turkey\",\n  \"March\",\n  \"Contract\",\n  \"Bridge\",\n  \"Robin\",\n  \"Line\",\n  \"Plate\",\n  \"Band\",\n  \"Fire\",\n  \"Bank\",\n  \"Boom\",\n  \"Cat\",\n  \"Shot\",\n  \"Suit\",\n  \"Chocolate\",\n  \"Roulette\",\n  \"Mercury\",\n  \"Moon\",\n  \"Net\",\n  \"Lawyer\",\n  \"Satellite\",\n  \"Angel\",\n  \"Spider\",\n  \"Germany\",\n  \"Fork\",\n  \"Pitch\",\n  \"King\",\n  \"Crane\",\n  \"Trip\",\n  \"Dog\",\n  \"Conductor\",\n  \"Part\",\n  \"Bugle\",\n  \"Witch\",\n  \"Ketchup\",\n  \"Press\",\n  \"Spine\",\n  \"Worm\",\n  \"Alps\",\n  \"Bond\",\n  \"Pan\",\n  \"Beijing\",\n  \"Racket\",\n  \"Cross\",\n  \"Seal\",\n  \"Aztec\",\n  \"Maple\",\n  \"Parachute\",\n  \"Hotel\",\n  \"Berry\",\n  \"Soldier\",\n  \"Ray\",\n  \"Post\",\n  \"Greece\",\n  \"Square\",\n  \"Mass\",\n  \"Bat\",\n  \"Wave\",\n  \"Car\",\n  \"Smuggler\",\n  \"England\",\n  \"Crash\",\n  \"Tail\",\n  \"Card\",\n  \"Horn\",\n  \"Capital\",\n  \"Fence\",\n  \"Deck\",\n  \"Buffalo\",\n  \"Microscope\",\n  \"Jet\",\n  \"Duck\",\n  \"Ring\",\n  \"Train\",\n  \"Field\",\n  \"Gold\",\n  \"Tick\",\n  \"Check\",\n  \"Queen\",\n  \"Strike\",\n  \"Kangaroo\",\n  \"Spike\",\n  \"Scientist\",\n  \"Engine\",\n  \"Shakespeare\",\n  \"Wind\",\n  \"Kid\",\n  \"Embassy\",\n  \"Robot\",\n  \"Note\",\n  \"Ground\",\n  \"Draft\",\n  \"Ham\",\n  \"War\",\n  \"Mouse\",\n  \"Center\",\n  \"Chick\",\n  \"China\",\n  \"Bolt\",\n  \"Spot\",\n  \"Piano\",\n  \"Pupil\",\n  \"Plot\",\n  \"Lion\",\n  \"Police\",\n  \"Head\",\n  \"Litter\",\n  \"Concert\",\n  \"Mug\",\n  \"Vacuum\",\n  \"Atlantis\",\n  \"Straw\",\n  \"Switch\",\n  \"Skyscraper\",\n  \"Laser\",\n  \"Scuba Diver\",\n  \"Africa\",\n  \"Plastic\",\n  \"Dwarf\",\n  \"Lap\",\n  \"Life\",\n  \"Honey\",\n  \"Horseshoe\",\n  \"Unicorn\",\n  \"Spy\",\n  \"Pants\",\n  \"Wall\",\n  \"Paper\",\n  \"Sound\",\n  \"Ice\",\n  \"Tag\",\n  \"Web\",\n  \"Fan\",\n  \"Orange\",\n  \"Temple\",\n  \"Canada\",\n  \"Scorpion\",\n  \"Undertaker\",\n  \"Mail\",\n  \"Europe\",\n  \"Soul\",\n  \"Apple\",\n  \"Pole\",\n  \"Tap\",\n  \"Mouth\",\n  \"Ambulance\",\n  \"Dress\",\n  \"Ice Cream\",\n  \"Rabbit\",\n  \"Buck\",\n  \"Agent\",\n  \"Sock\",\n  \"Nut\",\n  \"Boot\",\n  \"Ghost\",\n  \"Oil\",\n  \"Superhero\",\n  \"Code\",\n  \"Kiwi\",\n  \"Hospital\",\n  \"Saturn\",\n  \"Film\",\n  \"Button\",\n  \"Snowman\",\n  \"Helicopter\",\n  \"Loch Ness\",\n  \"Log\",\n  \"Princess\",\n  \"Time\",\n  \"Cook\",\n  \"Revolution\",\n  \"Shoe\",\n  \"Mole\",\n  \"Spell\",\n  \"Grass\",\n  \"Washer\",\n  \"Game\",\n  \"Beat\",\n  \"Hole\",\n  \"Horse\",\n  \"Pirate\",\n  \"Link\",\n  \"Dance\",\n  \"Fly\",\n  \"Pit\",\n  \"Server\",\n  \"School\",\n  \"Lock\",\n  \"Brush\",\n  \"Pool\",\n  \"Star\",\n  \"Jam\",\n  \"Organ\",\n  \"Berlin\",\n  \"Face\",\n  \"Luck\",\n  \"Amazon\",\n  \"Cast\",\n  \"Gas\",\n  \"Club\",\n  \"Sink\",\n  \"Water\",\n  \"Chair\",\n  \"Shark\",\n  \"Jupiter\",\n  \"Copper\",\n  \"Jack\",\n  \"Platypus\",\n  \"Stick\",\n  \"Olive\",\n  \"Grace\",\n  \"Bear\",\n  \"Glass\",\n  \"Row\",\n  \"Pistol\",\n  \"London\",\n  \"Rock\",\n  \"Van\",\n  \"Vet\",\n  \"Beach\",\n  \"Charge\",\n  \"Port\",\n  \"Disease\",\n  \"Palm\",\n  \"Moscow\",\n  \"Pin\",\n  \"Washington\",\n  \"Pyramid\",\n  \"Opera\",\n  \"Casino\",\n  \"Pilot\",\n  \"String\",\n  \"Night\",\n  \"Chest\",\n  \"Yard\",\n  \"Teacher\",\n  \"Pumpkin\",\n  \"Thief\",\n  \"Bark\",\n  \"Bug\",\n  \"Mint\",\n  \"Cycle\",\n  \"Telescope\",\n  \"Calf\",\n  \"Air\",\n  \"Box\",\n  \"Mount\",\n  \"Thumb\",\n  \"Antactica\",\n  \"Trunk\",\n  \"Snow\",\n  \"Penguin\",\n  \"Root\",\n  \"Bar\",\n  \"File\",\n  \"Hawk\",\n  \"Battery\",\n  \"Compound\",\n  \"Slug\",\n  \"Octopus\",\n  \"Whip\",\n  \"America\",\n  \"Ivory\",\n  \"Pound\",\n  \"Sub\",\n  \"Cliff\",\n  \"Lab\",\n  \"Eagle\",\n  \"Genious\",\n  \"Ship\",\n  \"Dice\",\n  \"Hood\",\n  \"Heart\",\n  \"Novel\",\n  \"Pipe\",\n  \"Himalayas\",\n  \"Crown\",\n  \"Round\",\n  \"India\",\n  \"Needle\",\n  \"Shop\",\n  \"Watch\",\n  \"Lead\",\n  \"Tie\",\n  \"Table\",\n  \"Cell\",\n  \"Cover\",\n  \"Czech\",\n  \"Back\",\n  \"Bomb\",\n  \"Ruler\",\n  \"Forest\",\n  \"Bottle\",\n  \"Space\",\n  \"Hook\",\n  \"Doctor\",\n  \"Ball\",\n  \"Bow\",\n  \"Degree\",\n  \"Rome\",\n  \"Plane\",\n  \"Giant\",\n  \"Nail\",\n  \"Dragon\",\n  \"Stadium\",\n  \"Flute\",\n  \"Carrot\",\n  \"Wake\",\n  \"Fighter\",\n  \"Model\",\n  \"Tokyo\",\n  \"Eye\",\n  \"Mexico\",\n  \"Hand\",\n  \"Swing\",\n  \"Key\",\n  \"Alien\",\n  \"Tower\",\n  \"Poison\",\n  \"Cricket\",\n  \"Cold\",\n  \"Knife\",\n  \"Church\",\n  \"Board\",\n  \"Cloak\",\n  \"Ninja\",\n  \"Olympus\",\n  \"Belt\",\n  \"Light\",\n  \"Death\",\n  \"Stock\",\n  \"Millionarie\",\n  \"Day\",\n  \"Knight\",\n  \"Pie\",\n  \"Bed\",\n  \"Circle\",\n  \"Rose\",\n  \"Change\",\n  \"Cap\",\n  \"Triangle\"\n]\n\nexport function words() {\n  const getTwentyFiveWords = function () {\n    let newList = []\n    for (let newListCount = newList.length; newListCount < 25;) {\n      let newWord = rando(wordlist);\n      if (newList.indexOf(newWord) !== -1) {\n        continue;\n      } else {\n        newList.push(newWord);\n      }\n      newListCount = newList.length;\n    }\n    return newList;\n  }\n\n  return getTwentyFiveWords();\n}\n\nexport function gameCode() {\n  return slugify(`${rando(wordlist)}-${rando(wordlist)}-${rando(wordlist)}`);\n}","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDNF0tW0P_WQmbTug2hN7zG97MDKpKDVvQ\",\n  authDomain: \"arobillard-games.firebaseapp.com\",\n  databaseURL: \"https://arobillard-games.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport GameBoard from './ui-elements/GameBoard';\nimport { words } from '../helpers';\nimport base from '../base';\n\nclass App extends React.Component {\n\n  state = {\n    cards: [],\n    spymaster: false\n  }\n\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.gamecode); //first reinstate localstorage\n    if (localStorageRef) {\n      const savedState = JSON.parse(localStorageRef);\n      this.setState({\n        cards: savedState.cards,\n        spymaster: savedState.spymaster\n      });\n      this.ref = base.syncState(this.props.match.params.gamecode, {\n        context: this,\n        state: 'cards'\n      });\n    } else {\n      this.ref = base.syncState(this.props.match.params.gamecode, {\n        context: this,\n        state: 'cards'\n      });\n      // this.generateCards();\n    }\n    \n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.gamecode, JSON.stringify(this.state))\n  }\n\n  generateCards = () => {\n    const wordList = words();\n    const newWordListObject = {};\n    // Assign word to object\n    let index = 1;\n    wordList.forEach(word => {\n      const wordObject = {\n        word: word,\n        team: 'civilian',\n        revealed: false\n      }\n      newWordListObject[`word${index}`] = wordObject;\n      index++;\n    })\n    // Assign team to word in object\n    let redAmount = 9;\n    let blueAmount = 8;\n    let randoNums = [];\n\n    let numberGenerator = function (arr) {\n      if (arr.length >= 18) return;\n      let newNumber = Math.floor(Math.random() * 25 + 1);\n      if (arr.indexOf(newNumber) < 0) {\n        arr.push(newNumber);\n      }\n      numberGenerator(arr);\n    };\n    numberGenerator(randoNums);\n    for (let i = 0; i < redAmount; i++) {\n      newWordListObject[`word${randoNums[i]}`].team = 'red';\n    }\n    randoNums.splice(0, 9)\n    for (let i = 0; i < blueAmount; i++) {\n      newWordListObject[`word${randoNums[i]}`].team = 'blue';\n    }\n    randoNums.splice(0, 8)\n    newWordListObject[`word${randoNums[0]}`].team = 'assassin';\n    this.setState({ cards: newWordListObject });\n  }\n\n  cardReveal = (key) => {\n    // Get current target\n    const target = key.currentTarget.getAttribute('index');\n    // Grab the current list of cards\n    const cards = {...this.state.cards}\n    // update the selected \n    cards[target].revealed = true;\n    // update state\n    this.setState({ cards })\n  }\n\n  spymasterSwitch = (e) => {\n    if(e.currentTarget.checked) {\n      this.setState({ spymaster: true });\n    } else {\n      this.setState({ spymaster: false });\n    }\n  }\n\n  render() {\n    return (\n      <GameBoard\n        state={this.state}\n        cardReveal={this.cardReveal}\n        spymasterSwitch={this.spymasterSwitch}\n        gamecode={this.props.match.params.gamecode}\n        generateCards={this.generateCards}\n      />\n    )\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport { gameCode, slugify } from '../../helpers';\n\nclass Welcome extends React.Component {\n  gcInput = React.createRef();\n  goToGame = (e) => {\n    // stop form from submiting\n    e.preventDefault();\n    // get gamecode from input\n    const gamecode = this.gcInput.current.value;\n    //change page to the gamecode\n    this.props.history.push(`/${slugify(gamecode)}`);\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper pad-t-b-2 gutter\">\n        <form className=\"welcome-form island-2\" onSubmit={this.goToGame}>\n          <h2 className=\"headline-4\">Join or host a game!</h2>\n          <p>To start a new game, simply enter a new unique <strong>Gamecode</strong> in the form below and hit <em>Start Playing</em>! If you wish to join a game someone else created, enter their <strong>Gamecode</strong> and hit <em>Start Playing</em>!</p>\n          <div className=\"grid-input-btn\">\n            <input\n              type=\"text\"\n              ref={this.gcInput}\n              required\n              placeholder=\"Enter Gamecode\"\n              defaultValue={gameCode()}\n            />\n            <button className=\"btn\" type=\"submit\">Start Playing!</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default Welcome;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <header className=\"masthead\">\n        <div className=\"wrapper gutter pad-t\">\n          <h1 className=\"push-0\">\n            <Link to='/'>Codenames</Link>\n          </h1>\n        </div>\n      </header>\n    )\n  }\n\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <footer className=\"footer pad-t-b-2 gutter\" role=\"contentinfo\">\n        <div className=\"wrapper\">\n          <div>\n            <small className=\"block push\">Based on popular table top game <a href=\"https://czechgames.com\" target=\"_blank\" rel=\"noopener noreferrer\">Codenames</a> by <a href=\"https://czechgames.com/en/codenames/\" target=\"_blank\" rel=\"noopener noreferrer\">Czech Games</a>.</small>\n            <small className=\"block\">This site was built for personal use only, not for monetary gain.</small>\n          </div>\n          <div>\n            <small className=\"block\">Site designed and developed by <a href=\"https://adamrobillard.ca\">Adam Robillard</a></small>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport App from './App';\nimport Welcome from './pages/Welcome';\nimport Header from './ui-elements/Header';\nimport Footer from './ui-elements/Footer';\n\nclass Router extends React.Component {\n\n  render() {\n    return(\n      <BrowserRouter>\n        <Header />\n        <main id=\"main\" role=\"main\" className=\"pad-t-b-4\">\n          <Switch>\n            <Route exact path='/' component={Welcome} />\n            <Route path='/:gamecode' component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n        <Footer />\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router.js';\n\nrender(<Router />, document.querySelector('#react-loader'));"],"sourceRoot":""}