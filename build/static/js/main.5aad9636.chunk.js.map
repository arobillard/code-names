{"version":3,"sources":["components/NotFound.js","helpers.js","base.js","components/ui-elements/CardDesign.js","components/ui-elements/Card.js","components/ui-elements/ControlBar.js","components/ui-elements/UserListItem.js","components/ui-elements/UserTeam.js","components/ui-elements/ConfirmNewGame.js","components/ui-elements/ChatMessage.js","components/ui-elements/ChatFeed.js","components/ui-elements/WinnerPopUp.js","components/App.js","components/pages/Welcome.js","components/ui-elements/Header.js","components/ui-elements/Footer.js","components/Router.js","index.js"],"names":["NotFound","to","React","Component","rando","arr","Math","floor","random","length","slugify","text","toString","toLowerCase","replace","wordlist","words","newList","newListCount","newWord","indexOf","push","getTwentyFiveWords","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","CardDesign","className","xmlns","xlink","viewBox","id","data-name","width","height","rx","fill","x1","y1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","d","x","y","transform","opacity","clipPath","points","Card","compareSpymasters","currentSpymastersList","Object","keys","props","currentSpymasters","localUser","includes","userName","keyHandle","e","keyCode","cardReveal","cardDesign","simpleCards","aria-hidden","data","word","this","role","tabIndex","revealed","onKeyDown","onClick","index","team","ControlBar","gamecode","onChange","simpleCardsSwitch","type","checked","handleNewGame","UserListItem","state","spymaster","user","handleDeleteUser","deleteUser","clearMySpymaster","handleSwitchTeam","switchTeam","handleSpymaster","clearTeamSpymasters","setAsSpymaster","UserTeam","formRef","createRef","userNameRef","teamRed","teamBlue","userTeamAssign","preventDefault","current","value","addUser","nameInput","localUserDefault","name","ref","required","placeholder","defaultValue","htmlFor","onSubmit","defaultChecked","ConfirmNewGame","newGame","clearSpymasters","generateCards","handleConfirm","undefined","cards","word1","fullTeamSwap","cancel","ChatMessage","textRef","messageRef","markdownifyText","finalText","insertAdjacentHTML","localUserCompare","ChatFeed","chatRef","chatInputRef","scrollChat","chatHeight","scrollHeight","scrollTop","sendChat","newChat","users","addChat","chat","map","key","autoComplete","WinnerPopUp","capitalize","charAt","toUpperCase","slice","teamName","console","log","App","spymasters","confirmNewGame","winner","wrapperRef","cardsSectionRef","wordList","newWordListObject","forEach","wordObject","randoNums","numberGenerator","newNumber","i","splice","setState","mainThis","target","currentTarget","getAttribute","checkForWinner","spymasterCompare","classList","add","remove","getUser","checkLocalUser","userNameInUsers","teamRender","color","userKeys","teamScore","cardKeys","count","showWinner","teamRedKeys","teamBlueKeys","localStorageRef","localStorage","getItem","match","params","savedState","JSON","parse","syncState","context","setItem","stringify","Welcome","gcInput","goToGame","history","Header","Footer","href","rel","Router","exact","path","component","render","document","querySelector"],"mappings":"kOAgBeA,E,uKAVX,OACE,oCACE,yCACA,kBAAC,IAAD,CAAMC,GAAG,KAAT,gB,GANeC,IAAMC,W,gBCItB,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAGrC,SAASC,EAAQC,GACtB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,IA+EpB,IAAMC,EAAW,CACf,YACA,OACA,OACA,WACA,SACA,QACA,OACA,QACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,SACA,YACA,YACA,SACA,QACA,QACA,aACA,OACA,QACA,MACA,UACA,UACA,QACA,QACA,UACA,QACA,OACA,UACA,QACA,OACA,UACA,SACA,QACA,SACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,QACA,OACA,QACA,QACA,WACA,OACA,OACA,SACA,QACA,WACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,YACA,WACA,UACA,OACA,MACA,SACA,YACA,QACA,SACA,UACA,OACA,QACA,OACA,QACA,OACA,MACA,YACA,OACA,QACA,QACA,UACA,QACA,QACA,OACA,OACA,OACA,MACA,UACA,SACA,QACA,OACA,QACA,QACA,YACA,QACA,QACA,UACA,MACA,OACA,SACA,SACA,OACA,MACA,OACA,MACA,WACA,UACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,UACA,aACA,MACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,SACA,WACA,QACA,YACA,SACA,cACA,OACA,MACA,UACA,QACA,OACA,SACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,UACA,MACA,SACA,WACA,QACA,SACA,aACA,QACA,cACA,SACA,UACA,QACA,MACA,OACA,QACA,YACA,UACA,MACA,QACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,SACA,SACA,SACA,WACA,aACA,OACA,SACA,OACA,QACA,OACA,MACA,QACA,YACA,QACA,YACA,SACA,OACA,QACA,OACA,MACA,OACA,QACA,MACA,YACA,OACA,OACA,WACA,SACA,OACA,SACA,UACA,aACA,YACA,MACA,WACA,OACA,OACA,aACA,OACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,QACA,MACA,MACA,SACA,SACA,OACA,QACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,SACA,OACA,MACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,OACA,WACA,QACA,QACA,QACA,OACA,QACA,MACA,SACA,SACA,OACA,MACA,MACA,QACA,SACA,OACA,UACA,OACA,SACA,MACA,aACA,UACA,QACA,SACA,QACA,SACA,QACA,QACA,OACA,UACA,UACA,QACA,OACA,MACA,OACA,QACA,YACA,OACA,MACA,MACA,QACA,QACA,aACA,QACA,OACA,UACA,OACA,MACA,OACA,OACA,UACA,WACA,OACA,UACA,OACA,UACA,QACA,QACA,MACA,QACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,OACA,YACA,QACA,QACA,QACA,SACA,OACA,QACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,MACA,SACA,OACA,QACA,QACA,OACA,SACA,UACA,QACA,SACA,OACA,UACA,QACA,QACA,MACA,SACA,OACA,QACA,MACA,QACA,QACA,SACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,OACA,QACA,QACA,QACA,cACA,MACA,SACA,MACA,MACA,SACA,OACA,SACA,MACA,YAGK,SAASC,IAed,OAd2B,WAEzB,IADA,IAAIC,EAAU,GACLC,EAAeD,EAAQR,OAAQS,EAAe,IAAK,CAC1D,IAAIC,EAAUf,EAAMW,IACc,IAA9BE,EAAQG,QAAQD,KAGlBF,EAAQI,KAAKF,GAEfD,EAAeD,EAAQR,QAEzB,OAAOQ,EAGFK,G,6BCjgBHC,E,OAAcC,EAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,4CAQAC,EALFC,IAAOC,YAAYR,EAAYS,YCkD7BC,E,uKAtDX,OACE,yBAAKC,UAAU,cAAcC,MAAM,6BAA6BC,MAAM,+BAA+BC,QAAQ,kBAC3G,8BACE,8BAAUC,GAAG,YACb,0BAAMA,GAAG,gBAAgBC,YAAU,gBAAgBC,MAAM,MAAMC,OAAO,SAASC,GAAG,QAAQC,KAAK,UAE/F,oCAAgBL,GAAG,kBAAkBM,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,cAAc,kBAChG,0BAAMC,OAAO,IAAIC,UAAU,SAC3B,0BAAMD,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,IAAIC,UAAU,UAE7B,oCAAgBZ,GAAG,oBAAoBM,GAAG,QAAQC,GAAG,SAASC,GAAG,OAAOC,GAAG,IAAIC,cAAc,kBAC3F,0BAAMC,OAAO,IAAIC,UAAU,SAC3B,0BAAMD,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,IAAIC,UAAU,UAE7B,oCAAgBZ,GAAG,oBAAoBM,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,cAAc,kBAClG,0BAAMC,OAAO,IAAIC,UAAU,SAC3B,0BAAMD,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,IAAIC,UAAU,UAE7B,oCAAgBZ,GAAG,oBAAoBM,GAAG,SAASC,GAAG,SAASC,GAAG,SAASC,GAAG,IAAIC,cAAc,kBAC9F,0BAAMC,OAAO,IAAIC,UAAU,SAC3B,0BAAMD,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,OAAOC,UAAU,OAAOC,YAAY,MACjD,0BAAMF,OAAO,IAAIC,UAAU,WAG/B,uBAAGZ,GAAG,aACJ,0BAAMA,GAAG,YAAYE,MAAM,MAAMC,OAAO,SAASC,GAAG,QAAQC,KAAK,YACjE,0BAAML,GAAG,eAAec,EAAE,qSAAqST,KAAK,YACpU,0BAAML,GAAG,gBAAgBc,EAAE,mFAAmFT,KAAK,SACnH,0BAAML,GAAG,qBAAqBe,EAAE,SAASC,EAAE,QAAQd,MAAM,OAAOC,OAAO,KAAKE,KAAK,YACjF,0BAAML,GAAG,kBAAkBe,EAAE,SAASC,EAAE,QAAQd,MAAM,KAAKC,OAAO,OAAOc,UAAU,uCAAuCZ,KAAK,YAC/H,0BAAML,GAAG,oBAAoBc,EAAE,4ZAA4ZT,KAAK,YAChc,0BAAML,GAAG,sBAAsBe,EAAE,QAAQC,EAAE,SAASd,MAAM,MAAMC,OAAO,IAAIE,KAAK,YAChF,uBAAGL,GAAG,kBAAkBkB,QAAQ,QAC9B,uBAAGC,SAAS,kBACZ,6BAASC,OAAO,wDAAwDf,KAAK,0BAC7E,6BAASe,OAAO,wDAAwDf,KAAK,4BAC7E,6BAASe,OAAO,yDAAyDf,KAAK,4BAC9E,6BAASe,OAAO,wDAAwDf,KAAK,oC,GA/ChEzC,IAAMC,WCmDhBwD,E,4MAhDbC,kBAAoB,WAClB,IAAMC,EAAwBC,OAAOC,KAAK,EAAKC,MAAMC,mBACrD,OAA6B,OAAzB,EAAKD,MAAME,aACTL,EAAsBM,SAAS,EAAKH,MAAME,UAAUE,W,EAU5DC,UAAY,SAACC,GACM,KAAdA,EAAEC,SACH,EAAKP,MAAMQ,WAAWF,GAEP,KAAdA,EAAEC,SACH,EAAKP,MAAMQ,WAAWF,I,EAI1BG,WAAa,WACX,IAA+B,IAA3B,EAAKT,MAAMU,YACb,OACE,oCACE,kBAAC,EAAD,MACA,0BAAMxC,UAAU,oBAAoByC,cAAY,QAAQ,EAAKX,MAAMY,KAAKC,Q,uDAO9E,IAAMD,EAAOE,KAAKd,MAAMY,KACxB,OACE,yBAAKG,KAAK,SAASC,SAAUJ,EAAKK,SAAW,KAAO,IAAKC,UAAWJ,KAAKT,UAAWc,QAASL,KAAKd,MAAMQ,WAAYY,MAAON,KAAKd,MAAMoB,MAAOlD,UAAS,cAAS0C,EAAKK,SAAL,oBAA6BL,EAAKS,MAAS,IAApD,OAAyDP,KAAKlB,oBAAL,WAA+BgB,EAAKS,MAAS,KAC1P,yBAAKnD,UAAU,qBACb,kBAAC,EAAD,MACA,0BAAMA,UAAU,oBAAoByC,cAAY,QAAQG,KAAKd,MAAMY,KAAKC,MACxE,uBAAG3C,UAAU,aAAa0C,EAAKC,Y,GA1CtB3E,IAAMC,WCsBVmF,E,uKApBX,OACE,yBAAKpD,UAAU,eACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,cAAd,iBACA,2BAAG,0BAAMA,UAAU,QAAhB,aAAH,IAA2C,wBAAIA,UAAU,YAAY4C,KAAKd,MAAMuB,WAChF,yBAAKrD,UAAU,eACb,+BACE,iDACA,2BAAOsD,SAAUV,KAAKd,MAAMyB,kBAAmBC,KAAK,WAAWC,QAASb,KAAKd,MAAMU,cACnF,0BAAMxC,UAAU,YAGpB,4BAAQA,UAAU,MAAMiD,QAASL,KAAKd,MAAM4B,eAA5C,kB,GAfe1F,IAAMC,WC6DhB0F,E,4MA3DbC,MAAQ,CACNC,WAAW,G,EAGbnC,kBAAoB,WAElB,QAD8BE,OAAOC,KAAK,EAAKC,MAAMC,mBAC3BE,SAAS,EAAKH,MAAMgC,KAAK5B,W,EAOrD6B,iBAAmB,WACjB,IAAM7B,EAAW,EAAKJ,MAAMgC,KAAK5B,SACjC,EAAKJ,MAAMkC,WAAW9B,GACtB,EAAKJ,MAAMmC,iBAAiB/B,I,EAG9BgC,iBAAmB,WACjB,IAAMhC,EAAW,EAAKJ,MAAMgC,KAAK5B,SAC3BiB,EAAO,EAAKrB,MAAMgC,KAAKX,KAC7B,EAAKrB,MAAMqC,WAAWjC,EAAUiB,GACFvB,OAAOC,KAAK,EAAKC,MAAMC,mBAC3BE,SAAS,EAAKH,MAAMgC,KAAK5B,WACjD,EAAKJ,MAAMmC,iBAAiB,EAAKnC,MAAMgC,KAAK5B,W,EAIhDkC,gBAAkB,WACcxC,OAAOC,KAAK,EAAKC,MAAMC,mBAC3BE,SAAS,EAAKH,MAAMgC,KAAK5B,UACjD,EAAKJ,MAAMmC,iBAAiB,EAAKnC,MAAMgC,KAAK5B,WAE5C,EAAKJ,MAAMuC,oBAAoB,EAAKvC,MAAMgC,KAAKX,MAC/C,EAAKrB,MAAMwC,eAAe,EAAKxC,MAAMgC,Q,uDAKvC,OACE,yBAAK9D,UAAS,cAAS4C,KAAKd,MAAME,UAAY,cAAgB,IAAhD,OAAqDY,KAAKlB,oBAAsB,aAAe,GAA/F,cACZ,0BAAM1B,UAAU,4CAChB,4BAAQA,UAAU,yBAAyB4C,KAAKd,MAAMgC,KAAK5B,UAC3D,4BAAQlC,UAAU,2BAA2BiD,QAASL,KAAKwB,iBACzD,uBAAGpE,UAAU,kBAAkB4C,KAAKlB,oBAAsB,aAAe,mBAE3E,4BAAQ1B,UAAU,aAAaiD,QAASL,KAAKsB,kBAC3C,uBAAGlE,UAAU,kBAAb,WAEF,4BAAQiD,QAASL,KAAKmB,kBACpB,uBAAG/D,UAAU,kBAAb,e,GArDiBhC,IAAMC,WCqGlBsG,E,4MAnGbC,QAAUxG,IAAMyG,Y,EAChBC,YAAc1G,IAAMyG,Y,EACpBE,QAAU3G,IAAMyG,Y,EAChBG,SAAW5G,IAAMyG,Y,EAEjBI,eAAiB,SAACzC,GAEhB,GADAA,EAAE0C,iBACE,EAAKN,QAAQO,QAAQ,GAAGtB,QAAS,CACnC,IAAMK,EAAO,CACX5B,SAAU,EAAKwC,YAAYK,QAAQC,MACnC7B,KAAM,MACNU,WAAW,GAEb,EAAK/B,MAAMmD,QAAQnB,OACd,CACL,IAAMA,EAAO,CACX5B,SAAU,EAAKwC,YAAYK,QAAQC,MACnC7B,KAAM,QAER,EAAKrB,MAAMmD,QAAQnB,K,EAIvBoB,UAAY,WACV,OAAoC,OAAhC,EAAKpD,MAAMqD,iBAEX,oCACA,2BACE/E,GAAG,YACHJ,UAAU,OACVoF,KAAK,YACL5B,KAAK,OACL6B,IAAK,EAAKX,YACVY,UAAQ,EACRC,YAAY,iBACZC,aAAc,EAAK1D,MAAMqD,iBAAiBjD,WAE5C,2BAAOlC,UAAU,SAASyF,QAAQ,aAAlC,aAKA,oCACE,2BACErF,GAAG,YACHJ,UAAU,OACVoF,KAAK,YACL5B,KAAK,OACL6B,IAAK,EAAKX,YACVY,UAAQ,EACRC,YAAY,mBAEd,2BAAOvF,UAAU,SAASyF,QAAQ,aAAlC,c,uDAON,OACE,yBAAKzF,UAAU,4BACb,0BAAMA,UAAU,wCAAwCqF,IAAKzC,KAAK4B,QAASkB,SAAU9C,KAAKiC,gBACxF,wBAAI7E,UAAU,cAAd,0BACA,+EACC4C,KAAKsC,YACN,yBAAKlF,UAAU,YACb,2BACEI,GAAG,WACH4E,MAAM,WACNhF,UAAU,SACVoF,KAAK,aACL5B,KAAK,QACL6B,IAAKzC,KAAK+B,QACVgB,gBAAc,IAEhB,2BAAO3F,UAAU,2CAA2CyF,QAAQ,YAApE,YACA,2BACErF,GAAG,YACH4E,MAAM,YACNhF,UAAU,SACVoF,KAAK,aACL5B,KAAK,QACL6B,IAAKzC,KAAKgC,WAEZ,2BAAO5E,UAAU,4CAA4CyF,QAAQ,aAArE,cAEF,4BACEzF,UAAU,MACVwD,KAAK,UAFP,oB,GAxFaxF,IAAMC,WCuCd2H,E,4MArCbC,QAAU,WACR,EAAK/D,MAAMgE,kBACX,EAAKhE,MAAMiE,gBACX,EAAKjE,MAAMkE,qBACoBC,IAA3B,EAAKnE,MAAMoE,MAAMC,OACnB,EAAKrE,MAAMsE,gB,EAIfC,OAAS,WACP,EAAKvE,MAAMkE,iB,uDAIX,OACE,yBAAKhG,UAAU,4BACb,yBAAKA,UAAU,yCACb,wBAAIA,UAAU,cAAd,8CACA,4BACEA,UAAU,0BACViD,QAASL,KAAKiD,SAFhB,WAMA,4BACE7F,UAAU,cACViD,QAASL,KAAKyD,QAFhB,gB,GA1BmBrI,IAAMC,WC6CpBqI,E,4MA3CbC,QAAUvI,IAAMyG,Y,EAChB+B,WAAaxI,IAAMyG,Y,EAMnBgC,gBAAkB,WAChB,IACMC,EADc,EAAK5E,MAAMrD,KAE5BG,QAAQ,MAAO,QACfA,QAAQ,KAAM,QACdA,QAAQ,KAAM,SACdA,QAAQ,IAAK,SAChB,EAAK4H,WAAWzB,QAAQ4B,mBAAmB,YAAaD,I,EAG1DE,iBAAmB,WACjB,OAA6B,OAAzB,EAAK9E,MAAME,WACT,EAAKF,MAAME,UAAUE,WAAa,EAAKJ,MAAMgC,M,oGAWnD,OACE,yBAAK9D,UAAS,kBAAa4C,KAAKd,MAAMqB,MAAxB,OAA+BP,KAAKgE,mBAAqB,cAAgB,KACrF,uBAAGvB,IAAKzC,KAAK4D,WAAYxG,UAAU,uBACjC,4BAAQA,UAAU,gBAAgB4C,KAAKd,MAAMgC,KAA7C,MACClB,KAAKd,MAAMrD,W,GApCIT,IAAMC,WC+DjB4I,E,4MA5DbC,QAAU9I,IAAMyG,Y,EAChBsC,aAAe/I,IAAMyG,Y,EAMrBuC,WAAa,WACX,IAAMC,EAAa,EAAKH,QAAQ/B,QAAQmC,aACxC,EAAKJ,QAAQ/B,QAAQoC,UAAYF,G,EAGnCG,SAAW,SAAChF,GAEV,GADAA,EAAE0C,iBACsC,KAApC,EAAKiC,aAAahC,QAAQC,MAAc,CAC1C,IAAMqC,EAAU,CACdvD,KAAM,EAAKhC,MAAME,UAAUE,SAC3BiB,KAAM,EAAKrB,MAAMwF,MAAM,EAAKxF,MAAME,UAAUE,UAAUiB,KACtD1E,KAAM,EAAKsI,aAAahC,QAAQC,OAElC,EAAKlD,MAAMyF,QAAQF,GACnB,EAAKN,aAAahC,QAAQC,MAAQ,K,mEAjBpCpC,KAAKoE,e,+BAqBG,IAAD,OACP,OACE,yBAAKhH,UAAU,6BACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,cAEF,yBAAKqF,IAAKzC,KAAKkE,QAAS9G,UAAU,QAC/B4B,OAAOC,KAAKe,KAAKd,MAAM0F,MAAMC,KAAI,SAAAC,GAAG,OACnC,kBAAC,EAAD,CACEA,IAAKA,EACL5D,KAAM,EAAKhC,MAAM0F,KAAKE,GAAK5D,KAC3BrF,KAAM,EAAKqD,MAAM0F,KAAKE,GAAKjJ,KAC3B0E,KAAM,EAAKrB,MAAM0F,KAAKE,GAAKvE,KAC3BnB,UAAW,EAAKF,MAAME,gBAI5B,0BAAMhC,UAAU,0BAA0B0F,SAAU9C,KAAKwE,SAAUO,aAAa,OAC9E,2BACEtC,IAAKzC,KAAKmE,aACV3G,GAAG,cACHgF,KAAK,cACLG,YAAY,oBAEd,2BAAOvF,UAAU,SAASyF,QAAQ,eAAlC,iBACA,4BAAQzF,UAAU,WAAWwD,KAAK,UAChC,uBAAGxD,UAAU,kBAAb,e,GArDWhC,IAAMC,WC8Dd2J,E,4MA7DbC,WAAa,SAAClF,GACZ,OAAOA,EAAKmF,OAAO,GAAGC,cAAgBpF,EAAKqF,MAAM,I,EAGnDC,SAAW,WACT,IAAMA,EAAW,EAAKJ,WAAW,EAAK/F,MAAMqB,MAE5C,OADA+E,QAAQC,IAAIF,GACK,aAAbA,EAEA,oCACE,wBAAIjI,UAAU,cAAd,mCACA,0HAKF,oCACE,wBAAIA,UAAU,cAAciI,EAA5B,eACA,qF,EAMRpC,QAAU,WACR,EAAK/D,MAAMgE,kBACX,EAAKhE,MAAMiE,gBACX,EAAKjE,MAAMkE,qBACoBC,IAA3B,EAAKnE,MAAMoE,MAAMC,OACnB,EAAKrE,MAAMsE,gB,EAIfC,OAAS,WACP,EAAKvE,MAAMkE,iB,uDAIX,OACE,yBAAKhG,UAAU,4BACb,yBAAKA,UAAU,yCACZ4C,KAAKqF,WACN,4BACEjI,UAAU,0BACViD,QAASL,KAAKiD,SAFhB,YAMA,4BACE7F,UAAU,cACViD,QAASL,KAAKyD,QAFhB,oB,GAlDgBrI,IAAMC,WC0ejBmK,E,4MA/dbxE,MAAQ,CACNsC,MAAO,GASPoB,MAAO,GACPtF,UAAW,GACXqG,WAAY,GACZb,KAAM,GACNc,gBAAgB,EAChBC,OAAQ,GACR/F,aAAa,G,EAGfgG,WAAaxK,IAAMyG,Y,EACnBgE,gBAAkBzK,IAAMyG,Y,EAkExBsB,cAAgB,WACd,IAAM2C,EAAW5J,IACX6J,EAAoB,GAEtBzF,EAAQ,EACZwF,EAASE,SAAQ,SAAAjG,GACf,IAAMkG,EAAa,CACjBlG,KAAMA,EACNQ,KAAM,WACNJ,UAAU,GAEZ4F,EAAkB,OAAD,OAAQzF,IAAW2F,EACpC3F,OAGF,IAEI4F,EAAY,IAEM,SAAlBC,EAA4B5K,GAC9B,KAAIA,EAAII,QAAU,IAAlB,CACA,IAAIyK,EAAY5K,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GAC5CH,EAAIe,QAAQ8J,GAAa,GAC3B7K,EAAIgB,KAAK6J,GAEXD,EAAgB5K,IAElB4K,CAAgBD,GAChB,IAAK,IAAIG,EAAI,EAAGA,EAbA,EAaeA,IAC7BN,EAAkB,OAAD,OAAQG,EAAUG,KAAM9F,KAAO,MAElD2F,EAAUI,OAAO,EAAG,GACpB,IAAK,IAAID,EAAI,EAAGA,EAhBC,EAgBeA,IAC9BN,EAAkB,OAAD,OAAQG,EAAUG,KAAM9F,KAAO,OAElD2F,EAAUI,OAAO,EAAG,GACpBP,EAAkB,OAAD,OAAQG,EAAU,KAAM3F,KAAO,WAChD,EAAKgG,SAAS,CACZjD,MAAOyC,K,EAIXjF,cAAgB,gBACgBuC,IAA3B,EAAKrC,MAAMsC,MAAMC,MAClB,EAAKJ,gBAEL,EAAKoD,SAAS,CAAEb,gBAAgB,K,EAIpCA,eAAiB,WACf,IAAMc,EAAQ,eACd,IAAkC,IAA9B,EAAKxF,MAAM0E,eAAyB,CAOtC,OACE,kBAAC,EAAD,CACEtC,cARJ,WACEoD,EAASD,SAAS,CAChBb,gBAAgB,EAChBC,OAAQ,QAMRxC,cAAe,EAAKA,cACpBK,aAAc,EAAKA,aACnBN,gBAAiB,EAAKA,gBACtBI,MAAO,EAAKtC,MAAMsC,U,EAO1B5D,WAAa,SAACoF,GAEZ,IAAM2B,EAAS3B,EAAI4B,cAAcC,aAAa,SAExCrD,EAAK,eAAO,EAAKtC,MAAMsC,OAE7BA,EAAMmD,GAAQtG,UAAW,EAEzB,EAAKoG,SAAS,CACZjD,MAAOA,IAET,EAAKsD,eAAetD,EAAMmD,GAAQlG,O,EAIpC2C,gBAAkB,WAChB,EAAKqD,SAAS,CAAEd,WAAY,Q,EAG9BhE,oBAAsB,SAAClB,GACrB,IAAMkF,EAAa,EAAKzE,MAAMyE,WACPzG,OAAOC,KAAKwG,GACpBO,SAAQ,SAAA/G,GAClBwG,EAAWxG,GAAMsB,OAASA,IAC3BkF,EAAWxG,GAAQ,KACnB,EAAKsH,SAAS,CAAEd,oB,EAKtBpE,iBAAmB,SAAC/B,GAClB,IAAMmG,EAAU,eAAO,EAAKzE,MAAMyE,YAClCA,EAAWnG,GAAY,KACvB,EAAKiH,SAAS,CAAEd,gB,EAGlB/D,eAAiB,SAACR,GAChB,IAAM5B,EAAW4B,EAAK5B,SAChBmG,EAAU,eAAO,EAAKzE,MAAMC,WAClCwE,EAAWnG,GAAY4B,EACvB,EAAKqF,SAAS,CAAEd,gB,EAGlBoB,iBAAmB,WACjB,IAAMzH,EAAY,EAAK4B,MAAM5B,UACvBqG,EAAa,EAAKzE,MAAMyE,WAC9B,GAAkB,OAAdrG,EAAoB,CACtB,IAAME,EAAWF,EAAUE,SACvBN,OAAOC,KAAKwG,GAAYpG,SAASC,GACnC,EAAKuG,gBAAgB1D,QAAQ2E,UAAUC,IAAI,aAE3C,EAAKlB,gBAAgB1D,QAAQ2E,UAAUE,OAAO,e,EAKpDC,QAAU,WACR,GAA6B,OAAzB,EAAKjG,MAAM5B,UACb,IAAM8H,EAAiB,EAAKlG,MAAM5B,UAAUE,SAExC6H,EADenI,OAAOC,KAAK,EAAK+B,MAAM0D,OACTrF,SAAS6H,GAE5C,GAA6B,OAAzB,EAAKlG,MAAM5B,YAA0C,IAApB+H,EACnC,OACE,kBAAC,EAAD,CACE9E,QAAS,EAAKA,QACdjD,UAAW,EAAKA,UAChBmD,iBAAkB,EAAKvB,MAAM5B,a,EAMrCgI,WAAa,SAACC,GACZ,IAAM3C,EAAQ,EAAK1D,MAAM0D,MACnB4C,EAAWtI,OAAOC,KAAKyF,GACzBnE,EAAO,GAMX,OALA+G,EAAStB,SAAQ,SAAAlB,GACXJ,EAAMI,GAAKvE,OAAS8G,IACtB9G,EAAKuE,GAAOJ,EAAMI,OAGO,OAAzB,EAAK9D,MAAM5B,UAEXJ,OAAOC,KAAKsB,GAAMsE,KAAI,SAAAC,GAAG,OACvB,kBAAC,EAAD,CACEA,IAAKA,EACL5D,KAAMX,EAAKuE,GACX1F,WAAW,EACXgC,WAAY,EAAKA,WACjBG,WAAY,EAAKA,WACjBpC,kBAAmB,EAAK6B,MAAMyE,WAC9BvC,gBAAiB,EAAKA,gBACtBzB,oBAAqB,EAAKA,oBAC1BJ,iBAAkB,EAAKA,iBACvBK,eAAgB,EAAKA,oBAMvB1C,OAAOC,KAAKsB,GAAMsE,KAAI,SAAAC,GAAG,OACvB,kBAAC,EAAD,CACEA,IAAKA,EACL5D,KAAMX,EAAKuE,GACX1F,UAAW,EAAK4B,MAAM5B,UAAUE,WAAawF,EAC7C1D,WAAY,EAAKA,WACjBG,WAAY,EAAKA,WACjBpC,kBAAmB,EAAK6B,MAAMyE,WAC9BvC,gBAAiB,EAAKA,gBACtBzB,oBAAqB,EAAKA,oBAC1BJ,iBAAkB,EAAKA,iBACvBK,eAAgB,EAAKA,qB,EAOjC6F,UAAY,SAAChH,GACX,IAAM+C,EAAQ,EAAKtC,MAAMsC,MACnBkE,EAAWxI,OAAOC,KAAKqE,GACzBmE,EAAQ,EAUZ,OATAD,EAASxB,SAAQ,SAAAlB,GACXxB,EAAMwB,GAAKvE,OAASA,IAAgC,IAAxB+C,EAAMwB,GAAK3E,UACzCsH,OAQF,0BAAMrK,UAAU,SAASqK,I,EAI7Bb,eAAiB,SAACrG,GAChB,IAAM+C,EAAQ,EAAKtC,MAAMsC,MACnBkE,EAAWxI,OAAOC,KAAKqE,GACzBmE,EAAQ,EACZD,EAASxB,SAAQ,SAAAlB,GACXxB,EAAMwB,GAAKvE,OAASA,IAAgC,IAAxB+C,EAAMwB,GAAK3E,UACzCsH,OAGU,IAAVA,GACF,EAAKlB,SAAS,CAAEZ,OAAQpF,K,EAI5BmH,WAAa,WACX,IAAMlB,EAAQ,eACd,GAAiC,kBAAtB,EAAKxF,MAAM2E,QAA6C,aAAtB,EAAK3E,MAAM2E,OAAuB,CAI7E,OACE,kBAAC,EAAD,CACEpF,KAAM,EAAKS,MAAM2E,OACjBvC,cANJ,WACEoD,EAASD,SAAS,CAAEZ,OAAQ,QAM1BxC,cAAe,EAAKA,cACpBK,aAAc,EAAKA,aACnBN,gBAAiB,EAAKA,gBACtBI,MAAO,EAAKtC,MAAMsC,U,EAM1BjB,QAAU,SAACnB,GAET,EAAKqF,SAAS,CAAEnH,UAAW8B,IAE3B,IAAMwD,EAAK,eAAQ,EAAK1D,MAAM0D,OAC9BA,EAAMxD,EAAK5B,UAAY4B,EACvB,EAAKqF,SAAS,CACZ7B,MAAOA,K,EAIXtD,WAAa,SAAC9B,GACZ,IAAMoF,EAAK,eAAQ,EAAK1D,MAAM0D,OAC9BA,EAAMpF,GAAY,KAClB,EAAKiH,SAAS,CACZ7B,MAAOA,K,EAIXlB,aAAe,WACb,IAAM8D,EAAWtI,OAAOC,KAAK,EAAK+B,MAAM0D,OACpCiD,EAAc,GACdC,EAAe,GACnBN,EAAStB,SAAQ,SAAAlB,GACoB,QAA/B,EAAK9D,MAAM0D,MAAMI,GAAKvE,KACxBoH,EAAYpL,KAAKuI,GACuB,SAA/B,EAAK9D,MAAM0D,MAAMI,GAAKvE,MAC/BqH,EAAarL,KAAKuI,MAGtB6C,EAAY3B,SAAQ,SAAAlB,GAClB,EAAKvD,WAAWuD,EAAK,UAEvB8C,EAAa5B,SAAQ,SAAAlB,GACnB,EAAKvD,WAAWuD,EAAK,Y,EAIzBvD,WAAa,SAACjC,EAAUiB,GAEtB,IAAMmE,EAAK,eAAQ,EAAK1D,MAAM0D,OACjB,QAATnE,GAEFmE,EAAMpF,GAAUiB,KAAO,OAEvB,EAAKgG,SAAS,CACZ7B,MAAOA,MAITA,EAAMpF,GAAUiB,KAAO,MAEvB,EAAKgG,SAAS,CACZ7B,MAAOA,M,EAKb/D,kBAAoB,YACa,IAA3B,EAAKK,MAAMpB,YACb,EAAK2G,SAAS,CAAE3G,aAAa,IAE7B,EAAK2G,SAAS,CAAE3G,aAAa,K,EAIjC+E,QAAU,SAACF,GAET,GADAa,QAAQC,IAAI,EAAKvE,MAAM4D,KAAK,SACDvB,IAAvB,EAAKrC,MAAM4D,KAAK,GAAkB,CACpC,IAAMA,EAAO,GACbA,EAAKrI,KAAKkI,GACV,EAAK8B,SAAS,CAAE3B,aACX,CACL,IAAMA,EAAO,EAAK5D,MAAM4D,KACxBA,EAAKrI,KAAKkI,GACV,EAAK8B,SAAS,CAAE3B,W,kEA5XlB,IAAMiD,EAAkBC,aAAaC,QAAQ/H,KAAKd,MAAM8I,MAAMC,OAAOxH,UACrE,GAAIoH,EAAiB,CACnB,IAAMK,EAAaC,KAAKC,MAAMP,GAC9B7H,KAAKuG,SAAS,CACZjD,MAAO4E,EAAW5E,MAClBoB,MAAOwD,EAAWxD,MAClBe,WAAYyC,EAAWzC,WACvB7F,YAAasI,EAAWtI,cAE1BI,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,UAA4D,CACrE6H,QAAStI,KACTgB,MAAO,UAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,UAA4D,CACrE6H,QAAStI,KACTgB,MAAO,UAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,eAAiE,CAC1E6H,QAAStI,KACTgB,MAAO,eAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,SAA2D,CACpE6H,QAAStI,KACTgB,MAAO,SAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,WAA6D,CACtE6H,QAAStI,KACTgB,MAAO,gBAGThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,UAA4D,CACrE6H,QAAStI,KACTgB,MAAO,UAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,UAA4D,CACrE6H,QAAStI,KACTgB,MAAO,UAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,eAAiE,CAC1E6H,QAAStI,KACTgB,MAAO,eAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,SAA2D,CACpE6H,QAAStI,KACTgB,MAAO,SAEThB,KAAKyC,IAAM1F,EAAKsL,UAAL,UAAkBrI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAA1C,WAA6D,CACtE6H,QAAStI,KACTgB,MAAO,WAIX,IAAM5B,EAAY+I,KAAKC,MAAMN,aAAaC,QAAQ,cAClD/H,KAAKuG,SAAS,CAAEnH,gB,2CAIhB0I,aAAaS,QAAQvI,KAAKd,MAAM8I,MAAMC,OAAOxH,SAAU0H,KAAKK,UAAUxI,KAAKgB,QAC3E8G,aAAaS,QAAQ,YAAaJ,KAAKK,UAAUxI,KAAKgB,MAAM5B,YAC5D0I,aAAaS,QAAQ,cAAeJ,KAAKK,UAAUxI,KAAKgB,MAAMpB,cAC9DI,KAAK6G,qB,+BAoUG,IAAD,OACP,OACE,oCACA,yBAAKpE,IAAKzC,KAAK4F,WAAYxI,UAAU,qDACnC,6BAASA,UAAU,8DACjB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cAAd,YACC4C,KAAKuH,UAAU,QAEjBvH,KAAKoH,WAAW,QAEnB,yBAAKhK,UAAU,mCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cAAd,aACC4C,KAAKuH,UAAU,SAEjBvH,KAAKoH,WAAW,SAEnB,yBAAKhK,UAAU,iCACb,wBAAIA,UAAU,cAAd,UACA,wBAAIA,UAAU,UACZ,yBAAKA,UAAU,gDACb,gDACA,wBAAIA,UAAU,iBAAgB,uBAAGA,UAAU,kBAAb,oBAEhC,yBAAKA,UAAU,gDACb,4CACA,wBAAIA,UAAU,iBAAgB,uBAAGA,UAAU,kBAAb,YAEhC,yBAAKA,UAAU,uCACb,2CACA,wBAAIA,UAAU,iBAAgB,uBAAGA,UAAU,kBAAb,cAKtC,kBAAC,EAAD,CACEqD,SAAUT,KAAKd,MAAM8I,MAAMC,OAAOxH,SAClCK,cAAed,KAAKc,cACpBlB,YAAaI,KAAKgB,MAAMpB,YACxBe,kBAAmBX,KAAKW,oBAE1B,6BAAS8B,IAAKzC,KAAK6F,gBAAiBzI,UAAS,eAAU4C,KAAKgB,MAAMpB,YAAc,gBAAkB,GAArD,UAC1CZ,OAAOC,KAAKe,KAAKgB,MAAMsC,OAAOuB,KAAI,SAAAC,GAAG,OACpC,kBAAC,EAAD,CACEA,IAAKA,EACLxE,MAAOwE,EACPhF,KAAM,EAAKkB,MAAMsC,MAAMwB,GACvBpF,WAAY,EAAKA,WACjBP,kBAAmB,EAAK6B,MAAMyE,WAC9BrG,UAAW,EAAK4B,MAAM5B,UACtBQ,YAAa,EAAKoB,MAAMpB,kBAI9B,kBAAC,EAAD,CACEgF,KAAM5E,KAAKgB,MAAM4D,KACjBxF,UAAWY,KAAKgB,MAAM5B,UACtBsF,MAAO1E,KAAKgB,MAAM0D,MAClBC,QAAS3E,KAAK2E,WAGjB3E,KAAKiH,UACLjH,KAAK0F,iBACL1F,KAAK0H,kB,GA1dMtM,IAAMC,WC0BToN,E,4MAjCbC,QAAUtN,IAAMyG,Y,EAChB8G,SAAW,SAACnJ,GAEVA,EAAE0C,iBAEF,IAAMzB,EAAW,EAAKiI,QAAQvG,QAAQC,MAEtC,EAAKlD,MAAM0J,QAAQrM,KAAnB,WAA4BX,EAAQ6E,M,uDAIpC,OACE,yBAAKrD,UAAU,4BACb,0BAAMA,UAAU,wBAAwB0F,SAAU9C,KAAK2I,UACrD,wBAAIvL,UAAU,cAAd,wBACA,6EAAkD,4CAAlD,8BAAsG,6CAAtG,kEAA2L,4CAA3L,YAA6N,6CAA7N,KACA,yBAAKA,UAAU,kBACb,2BACEwD,KAAK,OACL6B,IAAKzC,KAAK0I,QACVhG,UAAQ,EACRC,YAAY,iBACZC,aZ8eLhH,EAAQ,GAAD,OAAIN,EAAMW,GAAV,YAAuBX,EAAMW,GAA7B,YAA0CX,EAAMW,OY5epD,4BAAQmB,UAAU,MAAMwD,KAAK,UAA7B,yB,GAzBUxF,IAAMC,WCgBbwN,E,uKAbX,OACE,4BAAQzL,UAAU,YAChB,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,qBACZ,kBAAC,IAAD,CAAMjC,GAAG,KAAT,oB,GAPSC,IAAMC,WCmBZyN,E,uKAjBX,OACE,4BAAQ1L,UAAU,mBAAmB6C,KAAK,eACxC,yBAAK7C,UAAU,kBACb,6BACE,2BAAOA,UAAU,cAAjB,mCAA8D,uBAAG2L,KAAK,uCAAuCtC,OAAO,SAASuC,IAAI,uBAAnE,aAA9D,OAAwK,uBAAGD,KAAK,0BAA0BtC,OAAO,SAASuC,IAAI,uBAAtD,eAAxK,KACA,2BAAO5L,UAAU,SAAjB,sEAEF,6BACE,2BAAOA,UAAU,SAAjB,kCAAwD,uBAAG2L,KAAK,4BAAR,0B,GAX/C3N,IAAMC,WC0BZ4N,E,uKAjBX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAMzL,GAAG,OAAOyC,KAAK,OAAO7C,UAAU,aACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,kBAAC,IAAD,CAAOU,KAAK,aAAaC,UAAW5D,IACpC,kBAAC,IAAD,CAAO4D,UAAWlO,MAGtB,kBAAC,EAAD,W,GAbaE,IAAMC,WCJ3BgO,iBAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,oB","file":"static/js/main.5aad9636.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends React.Component {\n\n  render() {\n    return (\n      <>\n        <h1>Not Found</h1>\n        <Link to=\"/\">Go Home</Link>\n      </>\n    )\n  }\n\n}\n\nexport default NotFound;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n\nconst wordlist = [\n  \"Hollywood\",\n  \"Well\",\n  \"Foot\",\n  \"New York\",\n  \"Spring\",\n  \"Court\",\n  \"Tube\",\n  \"Point\",\n  \"Tablet\",\n  \"Slip\",\n  \"Date\",\n  \"Drill\",\n  \"Lemon\",\n  \"Bell\",\n  \"Screen\",\n  \"Fair\",\n  \"Torch\",\n  \"State\",\n  \"Match\",\n  \"Iron\",\n  \"Block\",\n  \"France\",\n  \"Australia\",\n  \"Limousine\",\n  \"Stream\",\n  \"Glove\",\n  \"Nurse\",\n  \"Leprechaun\",\n  \"Play\",\n  \"Tooth\",\n  \"Arm\",\n  \"Bermuda\",\n  \"Diamond\",\n  \"Whale\",\n  \"Comic\",\n  \"Mammoth\",\n  \"Green\",\n  \"Pass\",\n  \"Missile\",\n  \"Paste\",\n  \"Drop\",\n  \"Phoenix\",\n  \"Marble\",\n  \"Staff\",\n  \"Figure\",\n  \"Park\",\n  \"Centaur\",\n  \"Shadow\",\n  \"Fish\",\n  \"Cotton\",\n  \"Egypt\",\n  \"Theater\",\n  \"Scale\",\n  \"Fall\",\n  \"Track\",\n  \"Force\",\n  \"Dinosaur\",\n  \"Bill\",\n  \"Mine\",\n  \"Turkey\",\n  \"March\",\n  \"Contract\",\n  \"Bridge\",\n  \"Robin\",\n  \"Line\",\n  \"Plate\",\n  \"Band\",\n  \"Fire\",\n  \"Bank\",\n  \"Boom\",\n  \"Cat\",\n  \"Shot\",\n  \"Suit\",\n  \"Chocolate\",\n  \"Roulette\",\n  \"Mercury\",\n  \"Moon\",\n  \"Net\",\n  \"Lawyer\",\n  \"Satellite\",\n  \"Angel\",\n  \"Spider\",\n  \"Germany\",\n  \"Fork\",\n  \"Pitch\",\n  \"King\",\n  \"Crane\",\n  \"Trip\",\n  \"Dog\",\n  \"Conductor\",\n  \"Part\",\n  \"Bugle\",\n  \"Witch\",\n  \"Ketchup\",\n  \"Press\",\n  \"Spine\",\n  \"Worm\",\n  \"Alps\",\n  \"Bond\",\n  \"Pan\",\n  \"Beijing\",\n  \"Racket\",\n  \"Cross\",\n  \"Seal\",\n  \"Aztec\",\n  \"Maple\",\n  \"Parachute\",\n  \"Hotel\",\n  \"Berry\",\n  \"Soldier\",\n  \"Ray\",\n  \"Post\",\n  \"Greece\",\n  \"Square\",\n  \"Mass\",\n  \"Bat\",\n  \"Wave\",\n  \"Car\",\n  \"Smuggler\",\n  \"England\",\n  \"Crash\",\n  \"Tail\",\n  \"Card\",\n  \"Horn\",\n  \"Capital\",\n  \"Fence\",\n  \"Deck\",\n  \"Buffalo\",\n  \"Microscope\",\n  \"Jet\",\n  \"Duck\",\n  \"Ring\",\n  \"Train\",\n  \"Field\",\n  \"Gold\",\n  \"Tick\",\n  \"Check\",\n  \"Queen\",\n  \"Strike\",\n  \"Kangaroo\",\n  \"Spike\",\n  \"Scientist\",\n  \"Engine\",\n  \"Shakespeare\",\n  \"Wind\",\n  \"Kid\",\n  \"Embassy\",\n  \"Robot\",\n  \"Note\",\n  \"Ground\",\n  \"Draft\",\n  \"Ham\",\n  \"War\",\n  \"Mouse\",\n  \"Center\",\n  \"Chick\",\n  \"China\",\n  \"Bolt\",\n  \"Spot\",\n  \"Piano\",\n  \"Pupil\",\n  \"Plot\",\n  \"Lion\",\n  \"Police\",\n  \"Head\",\n  \"Litter\",\n  \"Concert\",\n  \"Mug\",\n  \"Vacuum\",\n  \"Atlantis\",\n  \"Straw\",\n  \"Switch\",\n  \"Skyscraper\",\n  \"Laser\",\n  \"Scuba Diver\",\n  \"Africa\",\n  \"Plastic\",\n  \"Dwarf\",\n  \"Lap\",\n  \"Life\",\n  \"Honey\",\n  \"Horseshoe\",\n  \"Unicorn\",\n  \"Spy\",\n  \"Pants\",\n  \"Wall\",\n  \"Paper\",\n  \"Sound\",\n  \"Ice\",\n  \"Tag\",\n  \"Web\",\n  \"Fan\",\n  \"Orange\",\n  \"Temple\",\n  \"Canada\",\n  \"Scorpion\",\n  \"Undertaker\",\n  \"Mail\",\n  \"Europe\",\n  \"Soul\",\n  \"Apple\",\n  \"Pole\",\n  \"Tap\",\n  \"Mouth\",\n  \"Ambulance\",\n  \"Dress\",\n  \"Ice Cream\",\n  \"Rabbit\",\n  \"Buck\",\n  \"Agent\",\n  \"Sock\",\n  \"Nut\",\n  \"Boot\",\n  \"Ghost\",\n  \"Oil\",\n  \"Superhero\",\n  \"Code\",\n  \"Kiwi\",\n  \"Hospital\",\n  \"Saturn\",\n  \"Film\",\n  \"Button\",\n  \"Snowman\",\n  \"Helicopter\",\n  \"Loch Ness\",\n  \"Log\",\n  \"Princess\",\n  \"Time\",\n  \"Cook\",\n  \"Revolution\",\n  \"Shoe\",\n  \"Mole\",\n  \"Spell\",\n  \"Grass\",\n  \"Washer\",\n  \"Game\",\n  \"Beat\",\n  \"Hole\",\n  \"Horse\",\n  \"Pirate\",\n  \"Link\",\n  \"Dance\",\n  \"Fly\",\n  \"Pit\",\n  \"Server\",\n  \"School\",\n  \"Lock\",\n  \"Brush\",\n  \"Pool\",\n  \"Star\",\n  \"Jam\",\n  \"Organ\",\n  \"Berlin\",\n  \"Face\",\n  \"Luck\",\n  \"Amazon\",\n  \"Cast\",\n  \"Gas\",\n  \"Club\",\n  \"Sink\",\n  \"Water\",\n  \"Chair\",\n  \"Shark\",\n  \"Jupiter\",\n  \"Copper\",\n  \"Jack\",\n  \"Platypus\",\n  \"Stick\",\n  \"Olive\",\n  \"Grace\",\n  \"Bear\",\n  \"Glass\",\n  \"Row\",\n  \"Pistol\",\n  \"London\",\n  \"Rock\",\n  \"Van\",\n  \"Vet\",\n  \"Beach\",\n  \"Charge\",\n  \"Port\",\n  \"Disease\",\n  \"Palm\",\n  \"Moscow\",\n  \"Pin\",\n  \"Washington\",\n  \"Pyramid\",\n  \"Opera\",\n  \"Casino\",\n  \"Pilot\",\n  \"String\",\n  \"Night\",\n  \"Chest\",\n  \"Yard\",\n  \"Teacher\",\n  \"Pumpkin\",\n  \"Thief\",\n  \"Bark\",\n  \"Bug\",\n  \"Mint\",\n  \"Cycle\",\n  \"Telescope\",\n  \"Calf\",\n  \"Air\",\n  \"Box\",\n  \"Mount\",\n  \"Thumb\",\n  \"Antarctica\",\n  \"Trunk\",\n  \"Snow\",\n  \"Penguin\",\n  \"Root\",\n  \"Bar\",\n  \"File\",\n  \"Hawk\",\n  \"Battery\",\n  \"Compound\",\n  \"Slug\",\n  \"Octopus\",\n  \"Whip\",\n  \"America\",\n  \"Ivory\",\n  \"Pound\",\n  \"Sub\",\n  \"Cliff\",\n  \"Lab\",\n  \"Eagle\",\n  \"Genius\",\n  \"Ship\",\n  \"Dice\",\n  \"Hood\",\n  \"Heart\",\n  \"Novel\",\n  \"Pipe\",\n  \"Himalayas\",\n  \"Crown\",\n  \"Round\",\n  \"India\",\n  \"Needle\",\n  \"Shop\",\n  \"Watch\",\n  \"Lead\",\n  \"Tie\",\n  \"Table\",\n  \"Cell\",\n  \"Cover\",\n  \"Czech\",\n  \"Back\",\n  \"Bomb\",\n  \"Ruler\",\n  \"Forest\",\n  \"Bottle\",\n  \"Space\",\n  \"Hook\",\n  \"Doctor\",\n  \"Ball\",\n  \"Bow\",\n  \"Degree\",\n  \"Rome\",\n  \"Plane\",\n  \"Giant\",\n  \"Nail\",\n  \"Dragon\",\n  \"Stadium\",\n  \"Flute\",\n  \"Carrot\",\n  \"Wake\",\n  \"Fighter\",\n  \"Model\",\n  \"Tokyo\",\n  \"Eye\",\n  \"Mexico\",\n  \"Hand\",\n  \"Swing\",\n  \"Key\",\n  \"Alien\",\n  \"Tower\",\n  \"Poison\",\n  \"Cricket\",\n  \"Cold\",\n  \"Knife\",\n  \"Church\",\n  \"Board\",\n  \"Cloak\",\n  \"Ninja\",\n  \"Olympus\",\n  \"Belt\",\n  \"Light\",\n  \"Death\",\n  \"Stock\",\n  \"Millionaire\",\n  \"Day\",\n  \"Knight\",\n  \"Pie\",\n  \"Bed\",\n  \"Circle\",\n  \"Rose\",\n  \"Change\",\n  \"Cap\",\n  \"Triangle\"\n]\n\nexport function words() {\n  const getTwentyFiveWords = function () {\n    let newList = []\n    for (let newListCount = newList.length; newListCount < 25;) {\n      let newWord = rando(wordlist);\n      if (newList.indexOf(newWord) !== -1) {\n        continue;\n      } else {\n        newList.push(newWord);\n      }\n      newListCount = newList.length;\n    }\n    return newList;\n  }\n\n  return getTwentyFiveWords();\n}\n\nexport function gameCode() {\n  return slugify(`${rando(wordlist)}-${rando(wordlist)}-${rando(wordlist)}`);\n}","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDNF0tW0P_WQmbTug2hN7zG97MDKpKDVvQ\",\n  authDomain: \"arobillard-games.firebaseapp.com\",\n  databaseURL: \"https://arobillard-games.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\n\nclass CardDesign extends React.Component {\n\n  render() {\n    return (\n      <svg className=\"card-design\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 401 239.13\">\n        <defs>\n          <clipPath id=\"clipPath\">\n          <rect id=\"Rectangle_5-2\" data-name=\"Rectangle 5-2\" width=\"401\" height=\"239.13\" rx=\"31.06\" fill=\"none\" />\n          </clipPath>\n          <linearGradient id=\"linear-gradient\" x1=\"-17.71\" y1=\"245.57\" x2=\"153.98\" y2=\"-5.72\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stopColor=\"#fff\" />\n            <stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"0.69\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"1\" stopColor=\"#fff\" />\n          </linearGradient>\n          <linearGradient id=\"linear-gradient-2\" x1=\"-65.1\" y1=\"234.79\" x2=\"91.9\" y2=\"5\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stopColor=\"#fff\" />\n            <stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"0.69\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"1\" stopColor=\"#fff\" />\n          </linearGradient>\n          <linearGradient id=\"linear-gradient-3\" x1=\"155.26\" y1=\"245.57\" x2=\"326.96\" y2=\"-5.72\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stopColor=\"#fff\" />\n            <stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"0.69\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"1\" stopColor=\"#fff\" />\n          </linearGradient>\n          <linearGradient id=\"linear-gradient-4\" x1=\"221.98\" y1=\"234.79\" x2=\"378.98\" y2=\"5\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0\" stopColor=\"#fff\" />\n            <stop offset=\"0.33\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"0.69\" stopColor=\"#fff\" stopOpacity=\"0\" />\n            <stop offset=\"1\" stopColor=\"#fff\" />\n          </linearGradient>\n        </defs>\n        <g id=\"card-base\">\n          <rect id=\"card-back\" width=\"401\" height=\"239.13\" rx=\"31.06\" fill=\"#f2e3c3\" />\n          <path id=\"card-outline\" d=\"M369.94,220.63H31.06A12.57,12.57,0,0,1,18.5,208.08v-177A12.57,12.57,0,0,1,31.06,18.5H369.94A12.57,12.57,0,0,1,382.5,31.06v177A12.57,12.57,0,0,1,369.94,220.63ZM31.06,21.5a9.57,9.57,0,0,0-9.56,9.56v177a9.57,9.57,0,0,0,9.56,9.55H369.94a9.57,9.57,0,0,0,9.56-9.55v-177a9.57,9.57,0,0,0-9.56-9.56Z\" fill=\"#e2d3b3\" />\n          <path id=\"card-word-box\" d=\"M371,134.07v67.56a7.53,7.53,0,0,1-7.5,7.51H37.5a7.53,7.53,0,0,1-7.5-7.51V134.07Z\" fill=\"#fff\" />\n          <rect id=\"card-profile-frame\" x=\"295.71\" y=\"29.57\" width=\"75.2\" height=\"94\" fill=\"#f8f1e1\" />\n          <rect id=\"card-profile-bg\" x=\"291.31\" y=\"43.97\" width=\"84\" height=\"65.2\" transform=\"translate(409.87 -256.74) rotate(90)\" fill=\"#e2d3b3\" />\n          <path id=\"card-profile-head\" d=\"M359.59,75.32a3.16,3.16,0,0,0,.68-2.27l-.65-6.94a3.22,3.22,0,0,0-3.83-2.85l-.55.11a12.31,12.31,0,0,0-.47-4.58c-1.34-4-5.81-16.54-22.36-16.54s-26.82,9.39-26.82,21.46,8.05,18.33,8.05,25.93a65,65,0,0,1-2.17,14.94h-2.13a3.75,3.75,0,0,0-3.75,3.75l-2.33,10.24h45.07s-5.2-14-7.27-14h-1.39c.81-2.63,2.29-5,3.25-5.77,1.79-1.34,9.41.4,11.85-2.46.82-1,1.79-13.41,1.79-14.31S361,79.81,361,78A6.38,6.38,0,0,0,359.59,75.32Z\" fill=\"#e9dec6\" />\n          <rect id=\"card-word-separator\" x=\"29.91\" y=\"120.57\" width=\"256\" height=\"3\" fill=\"#e2d3b3\" />\n          <g id=\"card-shine-clip\" opacity=\"0.25\">\n            <g clipPath=\"url(#clipPath)\">\n            <polygon points=\"185.49 0 116.41 0 -48.73 239.13 20.35 239.13 185.49 0\" fill=\"url(#linear-gradient)\" />\n            <polygon points=\"105.73 0 86.66 0 -78.48 239.13 -59.41 239.13 105.73 0\" fill=\"url(#linear-gradient-2)\" />\n            <polygon points=\"358.46 0 289.39 0 124.25 239.13 193.32 239.13 358.46 0\" fill=\"url(#linear-gradient-3)\" />\n            <polygon points=\"392.81 0 373.74 0 208.6 239.13 227.68 239.13 392.81 0\" fill=\"url(#linear-gradient-4)\" />\n            </g>\n          </g>\n        </g>\n      </svg>\n    )\n  }\n\n}\n\nexport default CardDesign;","import React from 'react';\nimport CardDesign from './CardDesign';\n\nclass Card extends React.Component {\n  \n  compareSpymasters = () => {\n    const currentSpymastersList = Object.keys(this.props.currentSpymasters);\n    if (this.props.localUser !== null) {\n      if (currentSpymastersList.includes(this.props.localUser.userName)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  keyHandle = (e) => {\n    if(e.keyCode === 13) {\n      this.props.cardReveal(e)\n    }\n    if(e.keyCode === 32) {\n      this.props.cardReveal(e)\n    }\n  }\n\n  cardDesign = () => {\n    if (this.props.simpleCards === false) {\n      return (\n        <>\n          <CardDesign />\n          <span className='card-word-flipped' aria-hidden=\"true\">{this.props.data.word}</span>\n        </>\n      )\n    }\n  }\n  \n  render() {\n    const data = this.props.data;\n    return (\n      <div role=\"button\" tabIndex={data.revealed ? '-1' : '0'} onKeyDown={this.keyHandle} onClick={this.props.cardReveal} index={this.props.index} className={`card${data.revealed ? ` revealed ${data.team}` : \"\"}${this.compareSpymasters() ? ` ${data.team}` : \"\"}`}>\n        <div className=\"card-design-embed\">\n          <CardDesign />\n          <span className='card-word-flipped' aria-hidden=\"true\">{this.props.data.word}</span>\n          <p className='card-word'>{data.word}</p>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Card;","import React from 'react';\n\nclass ControlBar extends React.Component {\n\n  render() {\n    return (\n      <div className=\"control-bar\">\n        <div className=\"basic-card island\">\n          <h2 className=\"headline-6\">Game Settings</h2>\n          <p><span className=\"bold\">Gamecode:</span> <em className=\"gamecode\">{this.props.gamecode}</em></p>\n          <div className=\"switch push\">\n            <label>\n              <strong>Simple Cards:</strong>\n              <input onChange={this.props.simpleCardsSwitch} type=\"checkbox\" checked={this.props.simpleCards} />\n              <span className=\"lever\"></span>\n            </label>\n          </div>\n          <button className=\"btn\" onClick={this.props.handleNewGame}>New Game</button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ControlBar;","import React from 'react';\n\nclass UserListItem extends React.Component {\n\n  state = {\n    spymaster: false\n  }\n\n  compareSpymasters = () => {\n    const currentSpymastersList = Object.keys(this.props.currentSpymasters);\n    if (currentSpymastersList.includes(this.props.user.userName)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleDeleteUser = () => {\n    const userName = this.props.user.userName;\n    this.props.deleteUser(userName);\n    this.props.clearMySpymaster(userName);\n  }\n  \n  handleSwitchTeam = () => {\n    const userName = this.props.user.userName;\n    const team = this.props.user.team;\n    this.props.switchTeam(userName, team);\n    const currentSpymastersList = Object.keys(this.props.currentSpymasters);\n    if (currentSpymastersList.includes(this.props.user.userName)) {\n      this.props.clearMySpymaster(this.props.user.userName);\n    }\n  }\n  \n  handleSpymaster = () => {\n    const currentSpymastersList = Object.keys(this.props.currentSpymasters);\n    if (currentSpymastersList.includes(this.props.user.userName)) {\n      this.props.clearMySpymaster(this.props.user.userName);\n    } else {\n      this.props.clearTeamSpymasters(this.props.user.team);\n      this.props.setAsSpymaster(this.props.user);\n    }\n  }\n\n  render() {\n    return (\n      <div className={`user${this.props.localUser ? ' local-user' : ''}${this.compareSpymasters() ? ' spymaster' : ''} push-1-2`}>\n        <span className=\"profile-picture inline-block push-r-1-2\"></span>\n        <strong className=\"username spread-right\">{this.props.user.userName}</strong>\n        <button className=\"push-r-1-2 btn-spymaster\" onClick={this.handleSpymaster}>\n          <i className=\"material-icons\">{this.compareSpymasters() ? 'visibility' : 'visibility_off'}</i>\n        </button>\n        <button className=\"push-r-1-2\" onClick={this.handleSwitchTeam}>\n          <i className=\"material-icons\">cached</i>\n        </button>\n        <button onClick={this.handleDeleteUser}>\n          <i className=\"material-icons\">clear</i>\n        </button>\n      </div>\n    )\n  }\n\n}\n\nexport default UserListItem;","import React from 'react';\n\nclass UserTeam extends React.Component {\n\n  formRef = React.createRef();\n  userNameRef = React.createRef();\n  teamRed = React.createRef();\n  teamBlue = React.createRef();\n\n  userTeamAssign = (e) => {\n    e.preventDefault();\n    if (this.formRef.current[1].checked) {\n      const user = {\n        userName: this.userNameRef.current.value,\n        team: 'red',\n        spymaster: false\n      }\n      this.props.addUser(user)\n    } else {\n      const user = {\n        userName: this.userNameRef.current.value,\n        team: 'blue'\n      }\n      this.props.addUser(user)\n    }\n  }\n\n  nameInput = () => {\n    if (this.props.localUserDefault !== null) {\n      return (\n        <>\n        <input\n          id=\"user-name\"\n          className=\"push\"\n          name=\"user-name\"\n          type=\"text\"\n          ref={this.userNameRef}\n          required\n          placeholder=\"Enter Username\"\n          defaultValue={this.props.localUserDefault.userName}\n        />\n        <label className=\"hidden\" htmlFor=\"user-name\">Username</label>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <input\n            id=\"user-name\"\n            className=\"push\"\n            name=\"user-name\"\n            type=\"text\"\n            ref={this.userNameRef}\n            required\n            placeholder=\"Enter Username\"\n          />\n          <label className=\"hidden\" htmlFor=\"user-name\">Username</label>\n        </>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"user-team-pop-up-overlay\">\n        <form className=\"user-team-pop-up island-2 text-center\" ref={this.formRef} onSubmit={this.userTeamAssign}>\n          <h2 className=\"headline-4\">Pick your name &amp; team!</h2>\n          <p>(You can change your team later if you need to!)</p>\n          {this.nameInput()}\n          <div className=\"btn-wrap\">\n            <input\n              id=\"team-red\"\n              value=\"team-red\"\n              className=\"hidden\"\n              name=\"team-check\"\n              type=\"radio\"\n              ref={this.teamRed}\n              defaultChecked\n            />\n            <label className=\"btn btn-red btn-medium inline-block push\" htmlFor=\"team-red\">Red Team</label>\n            <input\n              id=\"team-blue\"\n              value=\"team-blue\"\n              className=\"hidden\"\n              name=\"team-check\"\n              type=\"radio\"\n              ref={this.teamBlue}\n            />\n            <label className=\"btn btn-blue btn-medium inline-block push\" htmlFor=\"team-blue\">Blue Team</label>\n          </div>\n          <button\n            className=\"btn\"\n            type=\"submit\"\n          >\n            Join Game!\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default UserTeam;","import React from 'react';\n\nclass ConfirmNewGame extends React.Component {\n\n  newGame = () => {\n    this.props.clearSpymasters()\n    this.props.generateCards();\n    this.props.handleConfirm();\n    if (this.props.cards.word1 !== undefined) {\n      this.props.fullTeamSwap();\n    }\n  }\n\n  cancel = () => {\n    this.props.handleConfirm();\n  }\n\n  render() {\n    return (\n      <div className=\"user-team-pop-up-overlay\">\n        <div className=\"user-team-pop-up island-2 text-center\">\n          <h2 className=\"headline-4\">Are you sure you want to start a new game?</h2>\n          <button\n            className=\"btn btn-blue push-r-1-2\"\n            onClick={this.newGame}\n          >\n            Confirm\n          </button>\n          <button\n            className=\"btn btn-red\"\n            onClick={this.cancel}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ConfirmNewGame;","import React from 'react';\n\nclass ChatMessage extends React.Component {\n\n  textRef = React.createRef();\n  messageRef = React.createRef();\n\n  componentDidMount() {\n    // this.markdownifyText();\n  }\n\n  markdownifyText = () => {\n    const initialText = this.props.text;\n    const finalText = initialText\n      .replace(\" **\", ' <b>')\n      .replace(\"**\", '</b>')\n      .replace(\" *\", ' <em>')\n      .replace(\"*\", '</em>')\n    this.messageRef.current.insertAdjacentHTML('beforeend', finalText)\n  }\n\n  localUserCompare = () => {\n    if (this.props.localUser !== null) {\n      if (this.props.localUser.userName === this.props.user) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className={`message ${this.props.team}${this.localUserCompare() ? ' local-user' : ''}`}>\n        <p ref={this.messageRef} className=\"message-text push-0\">\n          <strong className=\"message-user\">{this.props.user}: </strong>\n          {this.props.text}\n        </p>\n        {/* <em className=\"message-time\">18:25</em> */}\n      </div>\n    )\n  }\n\n}\n\nexport default ChatMessage;","import React from 'react';\nimport ChatMessage from './ChatMessage';\n\nclass ChatFeed extends React.Component {\n\n  chatRef = React.createRef();\n  chatInputRef = React.createRef();\n\n  componentDidUpdate() {\n    this.scrollChat();\n  }\n\n  scrollChat = () => {\n    const chatHeight = this.chatRef.current.scrollHeight;\n    this.chatRef.current.scrollTop = chatHeight;\n  }\n\n  sendChat = (e) => {\n    e.preventDefault();\n    if (this.chatInputRef.current.value !== '') {\n      const newChat = {\n        user: this.props.localUser.userName,\n        team: this.props.users[this.props.localUser.userName].team,\n        text: this.chatInputRef.current.value\n      }\n      this.props.addChat(newChat)\n      this.chatInputRef.current.value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chat-feed basic-card push\">\n        <div className=\"title-wrap\">\n          <h2 className=\"headline-6\">Chat Feed</h2>\n        </div>\n        <div ref={this.chatRef} className=\"chat\">\n          {Object.keys(this.props.chat).map(key => (\n            <ChatMessage\n              key={key}\n              user={this.props.chat[key].user}\n              text={this.props.chat[key].text}\n              team={this.props.chat[key].team}\n              localUser={this.props.localUser}\n            />\n          ))}\n        </div>\n        <form className=\"message-create relative\" onSubmit={this.sendChat} autoComplete=\"off\">\n          <input \n            ref={this.chatInputRef}\n            id=\"message-box\"\n            name=\"message-box\"\n            placeholder=\"Type a codeword\"\n          />\n          <label className=\"hidden\" htmlFor=\"message-box\">Input Message</label>\n          <button className=\"btn-send\" type=\"submit\">\n            <i className=\"material-icons\">send</i>\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default ChatFeed;","import React from 'react';\n\nclass WinnerPopUp extends React.Component {\n\n  capitalize = (word) => {\n    return word.charAt(0).toUpperCase() + word.slice(1);;\n  }\n\n  teamName = () => {\n    const teamName = this.capitalize(this.props.team);\n    console.log(teamName)\n    if (teamName === 'Assassin') {\n      return (\n        <>\n          <h2 className=\"headline-4\">Oh no! You picked the Assassin!</h2>\n          <p>Unfortunately, this means your team has lost the game. Would you like to start a new game?</p>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <h2 className=\"headline-4\">{teamName} Team Wins!</h2>\n          <p>Congratulations! Would you like to start a new game?</p>\n        </>\n      )\n    }\n  }\n\n  newGame = () => {\n    this.props.clearSpymasters()\n    this.props.generateCards();\n    this.props.handleConfirm();\n    if (this.props.cards.word1 !== undefined) {\n      this.props.fullTeamSwap();\n    }\n  }\n\n  cancel = () => {\n    this.props.handleConfirm();\n  }\n\n  render() {\n    return (\n      <div className=\"user-team-pop-up-overlay\">\n        <div className=\"user-team-pop-up island-2 text-center\">\n          {this.teamName()}\n          <button\n            className=\"btn btn-blue push-r-1-2\"\n            onClick={this.newGame}\n          >\n            New Game\n          </button>\n          <button\n            className=\"btn btn-red\"\n            onClick={this.cancel}\n          >\n            View Board\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default WinnerPopUp;","import React from 'react';\nimport { words } from '../helpers';\nimport base from '../base';\nimport Card from './ui-elements/Card';\nimport ControlBar from './ui-elements/ControlBar';\nimport UserListItem from './ui-elements/UserListItem';\nimport UserTeam from './ui-elements/UserTeam';\nimport ConfirmNewGame from './ui-elements/ConfirmNewGame';\nimport ChatFeed from './ui-elements/ChatFeed';\nimport WinnerPopUp from './ui-elements/WinnerPopUp';\n\nclass App extends React.Component {\n\n  state = {\n    cards: {},\n    // teams: {\n    //   red: {\n    //     score: 9\n    //   },\n    //   blue: {\n    //     score: 8\n    //   }\n    // },\n    users: {},\n    localUser: {},\n    spymasters: {},\n    chat: [],\n    confirmNewGame: false,\n    winner: {},\n    simpleCards: false\n  }\n\n  wrapperRef = React.createRef();\n  cardsSectionRef = React.createRef();\n\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.gamecode); //first reinstate localstorage\n    if (localStorageRef) {\n      const savedState = JSON.parse(localStorageRef);\n      this.setState({\n        cards: savedState.cards,\n        users: savedState.users,\n        spymasters: savedState.spymasters,\n        simpleCards: savedState.simpleCards\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/cards`, {\n        context: this,\n        state: 'cards'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/spymasters`, {\n        context: this,\n        state: 'spymasters'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/chat`, {\n        context: this,\n        state: 'chat'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/winner`, {\n        context: this,\n        state: 'winner'\n      });\n    } else {\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/cards`, {\n        context: this,\n        state: 'cards'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/spymasters`, {\n        context: this,\n        state: 'spymasters'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/chat`, {\n        context: this,\n        state: 'chat'\n      });\n      this.ref = base.syncState(`${this.props.match.params.gamecode}/winner`, {\n        context: this,\n        state: 'winner'\n      });\n      // this.generateCards();\n    }\n    const localUser = JSON.parse(localStorage.getItem('localUser'));\n    this.setState({ localUser })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.gamecode, JSON.stringify(this.state))\n    localStorage.setItem('localUser', JSON.stringify(this.state.localUser))\n    localStorage.setItem('simplecards', JSON.stringify(this.state.simpleCards))\n    this.spymasterCompare();\n  }\n\n  generateCards = () => {\n    const wordList = words();\n    const newWordListObject = {};\n    // Assign word to object\n    let index = 1;\n    wordList.forEach(word => {\n      const wordObject = {\n        word: word,\n        team: 'civilian',\n        revealed: false\n      }\n      newWordListObject[`word${index}`] = wordObject;\n      index++;\n    })\n    // Assign team to word in object\n    let redAmount = 9;\n    let blueAmount = 8;\n    let randoNums = [];\n\n    let numberGenerator = function (arr) {\n      if (arr.length >= 18) return;\n      let newNumber = Math.floor(Math.random() * 25 + 1);\n      if (arr.indexOf(newNumber) < 0) {\n        arr.push(newNumber);\n      }\n      numberGenerator(arr);\n    };\n    numberGenerator(randoNums);\n    for (let i = 0; i < redAmount; i++) {\n      newWordListObject[`word${randoNums[i]}`].team = 'red';\n    }\n    randoNums.splice(0, 9)\n    for (let i = 0; i < blueAmount; i++) {\n      newWordListObject[`word${randoNums[i]}`].team = 'blue';\n    }\n    randoNums.splice(0, 8)\n    newWordListObject[`word${randoNums[0]}`].team = 'assassin';\n    this.setState({\n      cards: newWordListObject\n    });\n  }\n\n  handleNewGame = () => {\n    if(this.state.cards.word1 === undefined) {\n      this.generateCards();\n    } else {\n      this.setState({ confirmNewGame: true });\n    }\n  }\n  \n  confirmNewGame = () => {\n    const mainThis = this;\n    if (this.state.confirmNewGame === true) {\n      function handleConfirm() {\n        mainThis.setState({\n          confirmNewGame: false,\n          winner: null\n        });\n      }\n      return (\n        <ConfirmNewGame\n          handleConfirm={handleConfirm}\n          generateCards={this.generateCards}\n          fullTeamSwap={this.fullTeamSwap}\n          clearSpymasters={this.clearSpymasters}\n          cards={this.state.cards}\n        />\n        // <button onClick={handleConfirm}>Confirm</button>\n      )\n    }\n  }\n\n  cardReveal = (key) => {\n    // Get current target\n    const target = key.currentTarget.getAttribute('index');\n    // Grab the current list of cards\n    const cards = {...this.state.cards}\n    // update the selected \n    cards[target].revealed = true;\n    // update state\n    this.setState({\n      cards: cards\n    });\n    this.checkForWinner(cards[target].team);\n    // console.log(cards[target].team === 'assassin')\n  }\n\n  clearSpymasters = () => {\n    this.setState({ spymasters: null })\n  }\n  \n  clearTeamSpymasters = (team) => {\n    const spymasters = this.state.spymasters;\n    const spymastersKeys = Object.keys(spymasters);\n    spymastersKeys.forEach(keys => {\n      if(spymasters[keys].team === team) {\n        spymasters[keys] = null;\n        this.setState({ spymasters })\n      }\n    })\n  }\n\n  clearMySpymaster = (userName) => {\n    const spymasters = {...this.state.spymasters};\n    spymasters[userName] = null;\n    this.setState({ spymasters })\n  }\n\n  setAsSpymaster = (user) => {\n    const userName = user.userName;\n    const spymasters = {...this.state.spymaster};\n    spymasters[userName] = user;\n    this.setState({ spymasters });\n  }\n\n  spymasterCompare = () => {\n    const localUser = this.state.localUser;\n    const spymasters = this.state.spymasters;\n    if (localUser !== null) {\n      const userName = localUser.userName;\n      if (Object.keys(spymasters).includes(userName)) {\n        this.cardsSectionRef.current.classList.add('spymaster')\n      } else {\n        this.cardsSectionRef.current.classList.remove('spymaster')\n      }\n    }\n  }\n\n  getUser = () => {\n    if (this.state.localUser !== null) {\n      const checkLocalUser = this.state.localUser.userName;\n      const checkUsers = Object.keys(this.state.users);\n      var userNameInUsers = checkUsers.includes(checkLocalUser);\n    }\n    if (this.state.localUser === null || userNameInUsers !== true) {\n      return (\n        <UserTeam\n          addUser={this.addUser}\n          localUser={this.localUser}\n          localUserDefault={this.state.localUser}\n        />\n      )\n    }\n  }\n\n  teamRender = (color) => {\n    const users = this.state.users;\n    const userKeys = Object.keys(users);\n    let team = {};\n    userKeys.forEach(key => {\n      if (users[key].team === color) {\n        team[key] = users[key]\n      }\n    })\n    if (this.state.localUser === null) {\n      return (\n        Object.keys(team).map(key => (\n          <UserListItem\n            key={key}\n            user={team[key]}\n            localUser={false}\n            deleteUser={this.deleteUser}\n            switchTeam={this.switchTeam}\n            currentSpymasters={this.state.spymasters}\n            clearSpymasters={this.clearSpymasters}\n            clearTeamSpymasters={this.clearTeamSpymasters}\n            clearMySpymaster={this.clearMySpymaster}\n            setAsSpymaster={this.setAsSpymaster}\n          />\n        ))\n      )\n    } else {\n        return (\n          Object.keys(team).map(key => (\n            <UserListItem\n              key={key}\n              user={team[key]}\n              localUser={this.state.localUser.userName === key}\n              deleteUser={this.deleteUser}\n              switchTeam={this.switchTeam}\n              currentSpymasters={this.state.spymasters}\n              clearSpymasters={this.clearSpymasters}\n              clearTeamSpymasters={this.clearTeamSpymasters}\n              clearMySpymaster={this.clearMySpymaster}\n              setAsSpymaster={this.setAsSpymaster}\n            />\n          ))\n        )\n    }\n  }\n\n  teamScore = (team) => {\n    const cards = this.state.cards;\n    const cardKeys = Object.keys(cards);\n    let count = 0;\n    cardKeys.forEach(key => {\n      if (cards[key].team === team && cards[key].revealed === false) {\n        count++;\n      }\n    })\n    // if (count === 0 && cards.word1 !== undefined && this.state.winner !== team) {\n    //   // this.setState({ winner: team })\n    //   console.count(`${team} wins!`)\n    // }\n    return (\n      <span className=\"score\">{count}</span>\n    )\n  }\n\n  checkForWinner = (team) => {\n    const cards = this.state.cards;\n    const cardKeys = Object.keys(cards);\n    let count = 0;\n    cardKeys.forEach(key => {\n      if (cards[key].team === team && cards[key].revealed === false) {\n        count++;\n      }\n    })\n    if (count === 0) {\n      this.setState({ winner: team })\n    }\n  }\n\n  showWinner = () => {\n    const mainThis = this;\n    if (typeof this.state.winner !== 'object' && this.state.winner !== \"civilian\") {\n      function handleConfirm() {\n        mainThis.setState({ winner: null });\n      }\n      return (\n        <WinnerPopUp\n          team={this.state.winner}\n          handleConfirm={handleConfirm}\n          generateCards={this.generateCards}\n          fullTeamSwap={this.fullTeamSwap}\n          clearSpymasters={this.clearSpymasters}\n          cards={this.state.cards}\n        />\n      )\n    }\n  }\n\n  addUser = (user) => {\n    // localUser\n    this.setState({ localUser: user });\n    // users\n    const users = { ...this.state.users }\n    users[user.userName] = user;\n    this.setState({\n      users: users\n    });\n  }\n\n  deleteUser = (userName) => {\n    const users = { ...this.state.users }\n    users[userName] = null;\n    this.setState({\n      users: users\n    });\n  }\n\n  fullTeamSwap = () => {\n    const userKeys = Object.keys(this.state.users);\n    let teamRedKeys = [];\n    let teamBlueKeys = [];\n    userKeys.forEach(key => {\n      if (this.state.users[key].team === 'red') {\n        teamRedKeys.push(key)\n      } else if (this.state.users[key].team === 'blue') {\n        teamBlueKeys.push(key)\n      }\n    })\n    teamRedKeys.forEach(key => {\n      this.switchTeam(key, 'red');\n    })\n    teamBlueKeys.forEach(key => {\n      this.switchTeam(key, 'blue');\n    })\n  }\n\n  switchTeam = (userName, team) => {\n    // Grab the current list of cards\n    const users = { ...this.state.users }\n    if (team === 'red') {\n      // update the selected \n      users[userName].team = 'blue';\n      // update state\n      this.setState({\n        users: users\n      });\n    } else {\n      // update the selected \n      users[userName].team = 'red';\n      // update state\n      this.setState({\n        users: users\n      });\n    }\n  }\n\n  simpleCardsSwitch = () => {\n    if (this.state.simpleCards === true) {\n      this.setState({ simpleCards: false })\n    } else {\n      this.setState({ simpleCards: true })\n    }\n  }\n\n  addChat = (newChat) => {\n    console.log(this.state.chat[0]);\n    if (this.state.chat[0] === undefined) {\n      const chat = [];\n      chat.push(newChat);\n      this.setState({ chat })\n    } else {\n      const chat = this.state.chat;\n      chat.push(newChat);\n      this.setState({ chat })\n    }\n  }\n\n  render() {\n    return (\n      <>\n      <div ref={this.wrapperRef} className=\"gameboard wrapper gutter spread-top spread-bottom\">\n        <section className=\"team-info grid grid-s-1 grid-m-1-2 grid-l-1-3 grid-c-gap-2\">\n          <div className=\"team-card team-red island push\">\n            <div className=\"team-header\">\n              <h2 className=\"headline-6\">Team Red</h2>\n              {this.teamScore('red')}\n            </div>\n            {this.teamRender('red')}\n          </div>\n          <div className=\"team-card team-blue island push\">\n            <div className=\"team-header\">\n              <h2 className=\"headline-6\">Team Blue</h2>\n              {this.teamScore('blue')}\n            </div>\n            {this.teamRender('blue')}\n          </div>\n          <div className=\"legend basic-card push island\">\n            <h2 className=\"headline-6\">Legend</h2>\n            <dl className=\"push-0\">\n              <div className=\"grid-flex-v-middle grid-flex-h-flip push-1-2\">\n                <dt>Spymaster Switch</dt>\n                <dd className=\"push-0 push-r\"><i className=\"material-icons\">visibility_off</i></dd>\n              </div>\n              <div className=\"grid-flex-v-middle grid-flex-h-flip push-1-2\">\n                <dt>Switch Teams</dt>\n                <dd className=\"push-0 push-r\"><i className=\"material-icons\">cached</i></dd>\n              </div>\n              <div className=\"grid-flex-v-middle grid-flex-h-flip\">\n                <dt>Remove User</dt>\n                <dd className=\"push-0 push-r\"><i className=\"material-icons\">clear</i></dd>\n              </div>\n            </dl>\n          </div>\n        </section>\n        <ControlBar\n          gamecode={this.props.match.params.gamecode}\n          handleNewGame={this.handleNewGame}\n          simpleCards={this.state.simpleCards}\n          simpleCardsSwitch={this.simpleCardsSwitch}\n        />\n        <section ref={this.cardsSectionRef} className={`cards${this.state.simpleCards ? ' simple-cards' : ''} push`}>\n          {Object.keys(this.state.cards).map(key => (\n            <Card\n              key={key}\n              index={key}\n              data={this.state.cards[key]}\n              cardReveal={this.cardReveal}\n              currentSpymasters={this.state.spymasters}\n              localUser={this.state.localUser}\n              simpleCards={this.state.simpleCards}\n            />\n          ))}\n        </section>\n        <ChatFeed\n          chat={this.state.chat}\n          localUser={this.state.localUser}\n          users={this.state.users}\n          addChat={this.addChat}\n        />\n      </div>\n      {this.getUser()}\n      {this.confirmNewGame()}\n      {this.showWinner()}\n      </>\n    )\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport { gameCode, slugify } from '../../helpers';\n\nclass Welcome extends React.Component {\n  gcInput = React.createRef();\n  goToGame = (e) => {\n    // stop form from submiting\n    e.preventDefault();\n    // get gamecode from input\n    const gamecode = this.gcInput.current.value;\n    //change page to the gamecode\n    this.props.history.push(`/${slugify(gamecode)}`);\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper pad-t-b-2 gutter\">\n        <form className=\"welcome-form island-2\" onSubmit={this.goToGame}>\n          <h2 className=\"headline-4\">Join or host a game!</h2>\n          <p>To start a new game, simply enter a new unique <strong>Gamecode</strong> in the form below and hit <em>Start Playing</em>! If you wish to join a game someone else created, enter their <strong>Gamecode</strong> and hit <em>Start Playing</em>!</p>\n          <div className=\"grid-input-btn\">\n            <input\n              type=\"text\"\n              ref={this.gcInput}\n              required\n              placeholder=\"Enter Gamecode\"\n              defaultValue={gameCode()}\n            />\n            <button className=\"btn\" type=\"submit\">Start Playing!</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default Welcome;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <header className=\"masthead\">\n        <div className=\"wrapper gutter pad-t-4 pad-b\">\n          <h1 className=\"push-0 headline-2\">\n            <Link to='/'>Codenames</Link>\n          </h1>\n        </div>\n      </header>\n    )\n  }\n\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <footer className=\"footer pad-t-b-2\" role=\"contentinfo\">\n        <div className=\"wrapper gutter\">\n          <div>\n            <small className=\"block push\">Based on popular table top game <a href=\"https://czechgames.com/en/codenames/\" target=\"_blank\" rel=\"noopener noreferrer\">Codenames</a> by <a href=\"https://czechgames.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Czech Games</a>.</small>\n            <small className=\"block\">This site was built for personal use only, not for monetary gain.</small>\n          </div>\n          <div>\n            <small className=\"block\">Site designed and developed by <a href=\"https://adamrobillard.ca\">Adam Robillard</a></small>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport App from './App';\nimport Welcome from './pages/Welcome';\nimport Header from './ui-elements/Header';\nimport Footer from './ui-elements/Footer';\n\nclass Router extends React.Component {\n\n  render() {\n    return(\n      <BrowserRouter>\n        <Header />\n        <main id=\"main\" role=\"main\" className=\"pad-t-b-4\">\n          <Switch>\n            <Route exact path='/' component={Welcome} />\n            <Route path='/:gamecode' component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n        <Footer />\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router.js';\n\nrender(<Router />, document.querySelector('#react-loader'));"],"sourceRoot":""}